// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/router/cluster-role-binding.yaml (329B)
// assets/router/cluster-role.yaml (788B)
// assets/router/deployment.yaml (1.76kB)
// assets/router/metrics/cluster-role-binding.yaml (285B)
// assets/router/metrics/cluster-role.yaml (259B)
// assets/router/metrics/role-binding.yaml (297B)
// assets/router/metrics/role.yaml (291B)
// assets/router/namespace.yaml (332B)
// assets/router/service-account.yaml (213B)
// assets/router/service-cloud.yaml (465B)
// assets/router/service-internal.yaml (429B)
// manifests/00-cluster-role.yaml (2.238kB)
// manifests/00-custom-resource-definition-internal.yaml (5.796kB)
// manifests/00-custom-resource-definition.yaml (36.644kB)
// manifests/00-ingress-credentials-request.yaml (1.464kB)
// manifests/00-namespace.yaml (266B)
// manifests/0000_90_ingress-operator_00_prometheusrole.yaml (237B)
// manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml (305B)
// manifests/0000_90_ingress-operator_02_servicemonitor.yaml (511B)
// manifests/01-cluster-role-binding.yaml (369B)
// manifests/01-role-binding.yaml (367B)
// manifests/01-role.yaml (477B)
// manifests/01-service-account.yaml (196B)
// manifests/01-service.yaml (344B)
// manifests/01-trusted-ca-configmap.yaml (323B)
// manifests/02-deployment.yaml (2.995kB)
// manifests/03-cluster-operator.yaml (357B)
// manifests/image-references (433B)

package manifests

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsRouterClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x31\x4e\xc4\x40\x0c\x45\xfb\x39\x85\x25\xea\x0c\xa2\x43\xd3\x01\x37\x58\x24\x7a\xef\xc4\xbb\x31\x49\xec\xc8\xf6\xa4\xe0\xf4\x28\x4a\x44\xc3\x4a\x29\x2d\xf9\xbf\xff\xfe\x13\xbc\xb3\xf4\x0e\x31\x10\x98\xb6\x20\x03\xd3\x89\x20\x14\x38\x1c\x3e\xc9\x56\xae\x04\x6f\xb5\x6a\x93\xc8\x69\x64\xe9\x0b\x7c\x4c\xcd\x83\xec\xa2\x13\x6d\x71\x96\x7b\xc2\x85\xbf\xc8\x9c\x55\x0a\xd8\x15\x6b\xc6\x16\x83\x1a\xff\x60\xb0\x4a\x1e\x5f\x3d\xb3\x3e\xaf\x2f\x69\xa6\xc0\x1e\x03\x4b\x02\x10\x9c\xa9\x80\x2e\x24\x3e\xf0\x2d\x3a\x96\xbb\x91\x7b\xb7\x9b\x24\x6f\xd7\x6f\xaa\xe1\x25\x75\xb0\x17\x1f\x3e\x87\xce\x1f\xe1\xf8\xdf\x4f\x5f\xb0\x3e\xa2\xa6\x6d\xd8\x85\x6e\x5b\xf1\xbf\x19\xe7\x32\x27\xf0\xdf\x00\x00\x00\xff\xff\x83\x13\xa9\xa6\x49\x01\x00\x00")

func assetsRouterClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleBindingYaml,
		"assets/router/cluster-role-binding.yaml",
	)
}

func assetsRouterClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role-binding.yaml", size: 329, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0x9a, 0xeb, 0xd3, 0x79, 0x1a, 0xa6, 0x75, 0xb5, 0xda, 0x10, 0x70, 0xf9, 0x80, 0xd1, 0x51, 0x55, 0x98, 0x4d, 0x11, 0x98, 0x79, 0x5c, 0x46, 0x99, 0xa3, 0x39, 0x68, 0xe9, 0xa2, 0x72, 0x56}}
	return a, nil
}

var _assetsRouterClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x31\x6f\xe3\x30\x0c\x85\x77\xfd\x0a\x22\x37\xdb\xc1\x6d\x07\xaf\x37\xdc\x76\x43\x51\x74\xa7\x65\xa6\x66\xed\x88\x02\x49\x39\x6d\x7f\x7d\x61\x3b\x29\x82\x24\x45\x9b\xcd\xcf\x22\xbf\x47\x3e\xe9\x17\xfc\x1d\x8b\x39\x29\x58\x94\x4c\x1d\xa8\x8c\x04\x3b\x51\x50\x29\x4e\x6a\x35\x3c\xf6\x6c\x60\xbd\x94\xb1\x83\x96\x00\x0d\x94\xcc\x95\xa3\xf3\xb4\xc8\x2c\x66\xdc\x8e\x54\x87\x81\x53\xd7\x9c\x88\x0f\x32\x52\xc0\xcc\x4f\xa4\xc6\x92\x1a\xd0\x16\x63\x8d\xc5\x7b\x51\x7e\x47\x67\x49\xf5\xf0\xc7\x6a\x96\xed\xf4\x3b\xec\xc9\xb1\x43\xc7\x26\x00\x24\xdc\x53\x03\x92\x29\x59\xcf\x3b\xaf\x38\x3d\x2b\x99\x55\xeb\x48\x41\xcb\x48\xd6\x84\x0a\x30\xf3\x3f\x95\x92\x6d\x6e\xaa\x60\xb3\x09\x30\xcf\x26\x45\x23\x1d\xff\x51\xea\xb2\x70\x72\x5b\xd4\x0c\xb6\x8c\x91\x56\x69\xa4\x13\xaf\x62\x22\x6d\x8f\x2d\x23\x9b\x2f\x1f\x07\xf4\xd8\x87\x6b\x9f\x79\x05\x4a\xce\xf1\x7c\x87\x6b\x6b\x97\x81\x92\xd2\xc4\x74\xb8\x70\x88\x4a\xe8\xf4\x05\xf9\x32\x9c\x6b\xb0\x95\xf6\x85\xa2\x63\x8c\x64\x76\x9f\xc1\x92\x60\xfd\x99\xec\x4d\xfc\x52\x73\x6f\x26\x3f\x07\x6f\xcd\xd1\xcb\x05\xbf\xe4\xee\xf6\xc0\x46\xb1\x28\xfb\xdb\x37\xe8\x53\x59\x94\xe4\xf4\xea\x51\x92\xb9\xe2\xf1\xde\xcf\x7d\x8c\xce\x9a\xff\xcf\xcf\x61\x3d\xe8\xc5\x3c\x91\x1f\x44\x87\xf0\x11\x00\x00\xff\xff\xad\x45\xb2\xc3\x14\x03\x00\x00")

func assetsRouterClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleYaml,
		"assets/router/cluster-role.yaml",
	)
}

func assetsRouterClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role.yaml", size: 788, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa, 0xc4, 0x4e, 0xa2, 0x9d, 0x1b, 0xd7, 0x35, 0xbf, 0x95, 0x95, 0xb4, 0x17, 0x87, 0x56, 0xb, 0x12, 0xf, 0xb6, 0x3e, 0x51, 0xe5, 0x5a, 0xd0, 0x66, 0x3a, 0x4d, 0x36, 0xc9, 0x93, 0x90, 0xb2}}
	return a, nil
}

var _assetsRouterDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\x41\x6f\xea\x48\x0c\xc7\xef\x7c\x0a\xeb\x71\x66\xa1\xaf\xdd\x6a\x37\x37\x04\xe9\x0a\xa9\x94\x08\xd2\x5e\xd1\x74\x62\xc0\xea\x64\x66\xd6\x76\xa8\xb2\x9f\x7e\x95\x40\x5b\xc2\xd2\xaa\x7b\x78\x9c\xa2\xf1\xdf\x7f\xff\x9c\xd8\x43\x1f\xa6\x18\x5d\xa8\x4b\xf4\x0a\xaf\xa4\x3b\x28\x70\x63\x2a\xa7\xb0\x37\xae\x42\xe9\xf5\x61\xe6\xb7\x8c\x22\x30\x09\x5e\x39\x38\x87\x0c\x12\xd1\xd2\x86\xec\x51\x04\x86\x11\x4c\x8c\x8e\xb0\x00\xa3\xc0\x95\x57\x2a\xf1\xb7\xde\x0b\xf9\x22\x39\xa9\xd0\x33\x91\x9e\x90\x85\x82\x4f\x9a\x04\x19\xee\xaf\x7a\x7d\xf0\xa6\x44\x30\xbe\x68\x1f\x24\x1a\x8b\xad\xa3\xa0\x76\xdc\x9a\xaa\x49\x0f\x20\x72\x68\x89\xa6\x68\x0a\x47\x1e\x57\x68\x83\x2f\x24\x81\xdb\xd1\xa8\x07\xa0\x58\x46\x67\x14\x1b\x29\xc0\x5b\x52\xfb\x8c\xbc\x27\x8b\x63\x6b\x43\xe5\xf5\xc1\x94\x98\x00\x87\x4a\x91\x8f\x82\x3e\xf8\x50\xe0\x0a\x1d\x5a\x0d\x0c\x24\xff\x61\x38\xe8\x22\x53\x60\xd2\x7a\xe2\x8c\xc8\xc1\x47\x6a\x51\x2c\x07\xd6\x55\xa2\xc8\x03\xcb\xa4\x64\x8d\x3b\x26\xd8\xe0\xd5\x90\x47\x96\x37\x16\x80\x41\xdb\xee\x19\xc1\x81\x82\x4a\xb3\xc5\xcf\xcb\x37\xbf\x56\x92\x55\xce\x65\xc1\x91\xad\x13\x98\x6d\x1e\x82\x66\x8c\xd2\xbc\xe7\x0f\x9d\x22\x97\xe4\x8d\x52\xf0\x73\x14\x69\x92\x8e\x09\x77\xc6\xb9\x67\x63\x5f\xf2\x70\x1f\xb6\xb2\xf0\x29\x73\x38\xc5\x88\x81\xf5\x04\xf7\x03\x78\xa7\x1a\x4f\x8e\x4f\xba\xcb\x02\x6b\x02\x7f\x8c\x3a\xd1\xc8\x41\x83\x0d\x2e\x81\x7c\x92\x7d\x62\x27\x5f\xf9\xdd\xdc\x5c\xff\x2f\xc3\x12\x95\xc9\x7e\x69\x79\xf5\xe7\xf5\xed\xb7\x3c\xfb\x30\x47\xde\x9e\x8d\xf5\x47\x18\xfd\x3e\xe9\xa8\x45\x8d\x0a\x54\x82\xfc\x3e\xd4\xd1\x88\xbc\x06\x2e\xda\x99\xde\xa2\x47\x36\xda\x31\xbc\xd0\xc2\x2a\x1f\xe7\xab\x75\xb6\x58\xe6\x1d\xca\x76\xdd\x12\xf8\xd1\xe0\xff\xb8\x90\xb6\x5c\x3c\xe6\xe9\x72\xbd\x4a\x97\x4f\xb3\x49\xba\x7e\x18\xcf\xd3\x55\x36\x9e\xa4\x97\x4c\x42\x44\x2f\x3b\xda\xe8\x80\x0e\x0b\x7e\xc1\x6f\x9a\xde\x8d\x1f\xef\xf3\xf5\x24\x5d\xe6\xb3\xbb\xd9\x64\x9c\xa7\xeb\xe9\x6c\x79\xc9\x6e\x88\x6a\x87\xf1\x85\x86\xea\x64\x18\x99\xf6\x46\x4f\x1b\x73\xb4\x47\x8f\x22\x19\x87\x67\x4c\x3a\x06\xe4\x49\xc9\xb8\x29\x3a\x53\xbf\xaf\xf2\x55\x77\x86\x9a\x19\xf9\x0b\xb5\x9b\x08\x10\x8d\xee\x12\x18\xee\xd0\x38\xdd\xfd\x73\x1e\xbc\xf4\xa5\x19\x4d\x41\xbf\x1a\x64\xd8\x54\xa9\xbf\x87\x23\xa1\x62\x8b\xd2\x35\x64\xfc\xbb\x42\x51\x39\x2f\x63\x63\xd5\x10\x8d\xca\xb3\xf3\x12\xcb\xc0\x75\x02\x3f\x7f\xbf\x9d\xd3\x49\x6c\x1f\x5c\x55\xe2\xbc\xb9\xed\xce\x36\xb9\x6c\xce\xb2\x03\xf5\xd7\x5f\x0e\x8e\xb3\x70\xfc\x5f\x18\x58\x64\x6d\xee\xfe\x73\x55\xd3\xf3\xc2\xbb\x3a\x01\xe5\xea\x2d\x74\x00\x78\xaf\x3d\xf8\x86\x97\xa0\xe5\xee\x0b\x3e\xaa\xe7\xa1\xc0\x04\x6e\x7e\x8e\x3a\x0b\xb7\x6a\xe5\xcd\x1d\xdc\xbd\x2f\x07\x87\x55\xfd\x37\x00\x00\xff\xff\xc6\x3b\xf5\x23\xe0\x06\x00\x00")

func assetsRouterDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterDeploymentYaml,
		"assets/router/deployment.yaml",
	)
}

func assetsRouterDeploymentYaml() (*asset, error) {
	bytes, err := assetsRouterDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/deployment.yaml", size: 1760, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x95, 0xae, 0xdd, 0xfc, 0xcf, 0xfb, 0x9e, 0x6a, 0x40, 0x54, 0xc3, 0x32, 0x6a, 0x41, 0xf4, 0xdf, 0xec, 0xfc, 0x28, 0xfd, 0x94, 0xab, 0xf5, 0x8c, 0xb4, 0x26, 0xb, 0x57, 0x70, 0x30, 0xba, 0x1c}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4a\xc4\x40\x0c\x86\xef\xf3\x14\x79\x81\x56\xbc\x2d\x73\x53\x0f\xde\x57\xf0\x9e\x9d\xa6\x36\xb6\x93\x0c\x49\xa6\x07\x9f\x5e\x8a\x22\xc2\x42\xaf\x81\x7c\xdf\xff\xad\x2c\x53\x86\x97\xad\x7b\x90\x5d\x75\xa3\x67\x96\x89\xe5\x23\x61\xe3\x77\x32\x67\x95\x0c\x76\xc3\x32\x62\x8f\x45\x8d\xbf\x30\x58\x65\x5c\x2f\x3e\xb2\x3e\xec\x8f\xa9\x52\xe0\x84\x81\x39\x01\x08\x56\xca\x60\xda\x83\x6c\xa8\x2a\x1c\x6a\x07\xcc\xfb\xed\x93\x4a\x78\x4e\x03\xfc\x18\xdf\xc8\x76\x2e\xf4\x54\x8a\x76\x89\xbf\xd7\x66\x5a\x29\x16\xea\x3e\xac\x17\xff\x3d\x7b\xc3\x42\x19\xb4\x91\xf8\xc2\x73\xfc\x27\x9b\x6e\x74\xa5\xf9\x90\xdf\xa5\x9c\x0c\x02\xc0\xc6\xaf\xa6\xbd\x9d\xd4\xa5\xef\x00\x00\x00\xff\xff\x7f\xc0\x4a\x40\x1d\x01\x00\x00")

func assetsRouterMetricsClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleBindingYaml,
		"assets/router/metrics/cluster-role-binding.yaml",
	)
}

func assetsRouterMetricsClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role-binding.yaml", size: 285, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0xce, 0x4e, 0xd1, 0x37, 0xde, 0x79, 0x91, 0x5c, 0x71, 0xd1, 0x88, 0x1b, 0xdb, 0xaf, 0x1, 0xe5, 0x8c, 0x81, 0xb3, 0xfd, 0x30, 0xe3, 0x5d, 0xb0, 0x59, 0x8b, 0x2a, 0x47, 0xf9, 0xa0, 0xdf}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\xb1\x4e\xc4\x40\x0c\x84\xe1\x7e\x9f\xc2\x12\x75\x72\xa2\x43\x69\x29\xe8\x29\xe8\x9d\xec\x70\xb1\x2e\x6b\xaf\x6c\xef\x49\xf0\xf4\xe8\x44\x90\xa8\xe7\x93\xfe\x79\xa2\xd7\x63\x44\xc2\xc9\xed\x40\x90\x02\x15\x95\xd6\x2f\xea\x6e\x0d\xb9\x63\x04\xa5\x51\x6c\xce\x1d\xe4\x36\x1e\xb6\x21\x5d\xb6\x20\x68\xed\x26\x9a\x85\xbb\x7c\xc0\x43\x4c\x17\xf2\x95\xb7\x99\x47\xee\xe6\xf2\xcd\x29\xa6\xf3\xed\x25\x66\xb1\xcb\xfd\xb9\xdc\x44\xeb\xf2\xd7\x7c\xb7\x03\xa5\x21\xb9\x72\xf2\x52\x88\x94\x1b\x96\x33\x32\x35\x53\x49\x73\xd1\x6b\xf1\x71\x20\x96\x32\x11\x77\x79\x73\x1b\x3d\x1e\x7a\xfa\x95\xb3\x75\x68\xec\xf2\x99\xb3\x58\x21\x72\x84\x0d\xdf\xf0\xdf\x78\x5c\xce\xcf\x85\xe8\x0e\x5f\xcf\xf1\x8a\x2c\x3f\x01\x00\x00\xff\xff\x4f\xd5\xdf\xe0\x03\x01\x00\x00")

func assetsRouterMetricsClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleYaml,
		"assets/router/metrics/cluster-role.yaml",
	)
}

func assetsRouterMetricsClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role.yaml", size: 259, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0x77, 0x73, 0x9c, 0x6, 0x33, 0xf2, 0x91, 0x6f, 0x3b, 0x35, 0x49, 0xf3, 0xa5, 0xfc, 0x1d, 0x2e, 0x2e, 0xa6, 0x5b, 0x95, 0xa6, 0x7e, 0x8d, 0xfe, 0x7e, 0xf4, 0x62, 0x30, 0xa5, 0x37, 0x61}}
	return a, nil
}

var _assetsRouterMetricsRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\x31\x4e\xc5\x40\x0c\x04\xd0\x7e\x4f\xe1\x0b\x24\x88\xee\x6b\x3b\x68\xe8\x3f\x12\xbd\xb3\x71\x12\x93\xac\xbd\xb2\xbd\x29\x38\x3d\x42\x8a\x44\x05\xd2\x6f\x47\x33\x9a\x87\x8d\x3f\xc8\x9c\x55\x32\xd8\x84\x65\xc4\x1e\x9b\x1a\x7f\x61\xb0\xca\xb8\xdf\x7c\x64\x7d\x3a\x9f\xd3\xce\x32\x67\xb8\xeb\x41\xaf\x2c\x33\xcb\x9a\x2a\x05\xce\x18\x98\x13\x80\x60\xa5\x0c\xcd\xb4\x52\x6c\xd4\x7d\xd8\x6f\x7e\xc5\xde\xb0\x50\x06\x6d\x24\xbe\xf1\x12\x03\xcb\x6a\xe4\x9e\x4c\x0f\xba\xd3\xf2\x33\xc7\xc6\x6f\xa6\xbd\xfd\x63\x48\x00\xbf\x84\xbf\x1e\xbd\x4f\x9f\x54\xc2\x73\x1a\xae\xf6\x3b\xd9\xc9\x85\x5e\x4a\xd1\x2e\xf1\xa0\xb4\xaa\x70\xa8\xb1\xac\x90\xbe\x03\x00\x00\xff\xff\x15\x9f\x30\x56\x29\x01\x00\x00")

func assetsRouterMetricsRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleBindingYaml,
		"assets/router/metrics/role-binding.yaml",
	)
}

func assetsRouterMetricsRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role-binding.yaml", size: 297, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0xef, 0x8, 0xfb, 0x1f, 0xa3, 0xc7, 0xfb, 0xbc, 0x6, 0x78, 0xad, 0x0, 0x28, 0x90, 0xc8, 0xe8, 0xf5, 0x7d, 0xf8, 0xd0, 0xeb, 0x52, 0xf, 0xd4, 0x81, 0xce, 0x69, 0xb8, 0x8c, 0x26, 0x8c}}
	return a, nil
}

var _assetsRouterMetricsRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\x37\x3b\x0f\xdd\x02\xfd\x40\xf7\x0e\xdd\x19\xe9\x36\x26\x62\x8b\x02\x49\xb9\x68\xbf\xbe\x88\xe3\x02\x9d\x78\xef\x01\xc1\xc3\x7f\xf4\xa6\x0b\x9c\x1a\x50\x51\xe9\xfa\x45\xdd\x74\x45\xcc\x18\x4e\xa1\xe4\xc5\xb8\x83\x4c\x47\xc0\x68\x45\x98\x14\x27\xb4\xda\x55\x5a\x24\xee\xf2\x0e\x73\xd1\x96\xc9\xae\x5c\xce\x3c\x62\x56\x93\x6f\x0e\xd1\x76\xbe\x5f\xfc\x2c\xfa\x7f\x7b\x49\x77\x69\x35\xef\xae\xb4\x22\xb8\x72\x70\x4e\x44\x8d\x57\xe4\x3f\xca\xe9\x7e\xf1\x03\x7b\xe7\x82\x4c\xda\xd1\x7c\x96\x8f\x98\xa4\xdd\x0c\xee\xc9\xc6\x02\xcf\x69\x22\xee\xf2\x6a\x3a\xba\x3f\x2e\x4d\x74\x3a\x25\x22\x83\xeb\xb0\x82\x83\x39\x6c\x93\x02\xdf\xcb\xef\xd7\xcf\xd6\xb5\x3e\xc2\x06\xbb\x1e\xcb\x37\xc4\x3e\x17\xf1\x67\xf8\xe4\x28\x73\xfa\x09\x00\x00\xff\xff\x67\x78\x6f\x08\x23\x01\x00\x00")

func assetsRouterMetricsRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleYaml,
		"assets/router/metrics/role.yaml",
	)
}

func assetsRouterMetricsRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role.yaml", size: 291, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x57, 0xe3, 0x68, 0x2c, 0xfd, 0xf1, 0x27, 0x9d, 0xa0, 0x3b, 0x10, 0x3e, 0xca, 0x3b, 0x76, 0x39, 0xf4, 0xb1, 0x37, 0x7b, 0xa3, 0xa7, 0x11, 0xc0, 0x6, 0x4b, 0x47, 0xbb, 0x93, 0x4b, 0xb7, 0xc2}}
	return a, nil
}

var _assetsRouterNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcf\xb1\x4e\xc3\x50\x0c\x85\xe1\x3d\x4f\x71\x14\xe6\x14\xb1\xde\x77\x80\x05\x89\xdd\xbd\x71\x53\x93\x1b\x3b\xb2\x9d\x56\xbc\x3d\xa2\x05\x51\x84\x3a\xfb\xd3\x2f\x9f\x59\x74\x2c\x78\xa1\x85\x63\xa5\xca\x1d\xad\xf2\xc6\x1e\x62\x5a\x70\x7a\xea\x16\x4e\x1a\x29\xa9\x74\x80\xd2\xc2\x05\xb6\xb2\xc6\x51\x0e\x39\x88\x4e\xce\x11\x1d\x40\xaa\x96\x94\x62\x1a\x5f\x10\xbf\x68\x27\xf6\xa8\x36\xf2\x10\xdc\xb8\xa6\x79\x41\xdf\x77\x40\xa3\x3d\xb7\x6f\xfc\x00\x6a\xcd\xce\x37\xe5\xc5\x54\xd2\x5c\x74\x42\x1a\x9a\xd9\x8c\x83\x39\x5e\xd9\x4f\x52\xf9\xf9\x7a\x85\xed\xdf\xb9\x66\x40\x14\x79\x94\xb8\xfc\x77\x1d\xf1\xef\x85\xda\xb6\x48\xf6\x9b\x70\x41\x9f\xbe\x71\x7f\xb1\xf7\x97\x01\xca\x79\x36\x9f\x77\x7f\x7a\xab\x35\xa9\x1f\xc3\xe4\xb6\xad\x05\x3f\xfc\x33\x00\x00\xff\xff\xfc\x31\x60\x23\x4c\x01\x00\x00")

func assetsRouterNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterNamespaceYaml,
		"assets/router/namespace.yaml",
	)
}

func assetsRouterNamespaceYaml() (*asset, error) {
	bytes, err := assetsRouterNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/namespace.yaml", size: 332, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0xe3, 0x8d, 0x5c, 0x13, 0x8b, 0x1, 0x55, 0x92, 0x5, 0xf, 0xe, 0x67, 0x18, 0xd5, 0xb5, 0xcd, 0x7f, 0x3c, 0x8, 0x6d, 0x82, 0x43, 0xd5, 0x94, 0x6a, 0x16, 0x59, 0x51, 0x20, 0xc9, 0x5f}}
	return a, nil
}

var _assetsRouterServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xce\xb1\x4e\xc4\x30\x10\x84\xe1\xde\x4f\x31\xd2\xd5\x9c\x44\xeb\x8e\x92\x16\x24\x7a\xb3\x99\xbb\x5b\x91\x78\xcd\xee\x3a\x88\xb7\x47\x41\x29\xa7\x98\x5f\xdf\x05\x2f\x22\x36\x7b\xe2\x66\x0e\xb7\x99\xf4\x80\x38\x5b\x72\xc1\xe7\x2f\xf2\x41\xd8\xa0\xb7\x34\xbf\xe2\x35\xf1\xa3\xeb\x0a\xe7\xf7\x54\x27\x64\x9d\x91\x74\x84\xd8\xe0\x52\x2e\x18\xf4\x4d\x23\xd4\x7a\xc0\xb9\xfe\x57\xd2\xf0\x76\x84\x31\xdc\x84\x11\xda\xef\xd7\xf2\xa5\x7d\xa9\x78\xa7\xef\x2a\x3c\x0d\xa5\x0d\xfd\xa0\x1f\xef\x8a\xfd\xb9\x6c\xcc\xb6\xb4\x6c\xb5\x00\xbd\x6d\xac\x27\xf0\x9c\x31\x9a\xb0\x1e\xba\x1e\x0f\xbd\xe5\x93\xf6\xbb\x33\xa2\xfc\x05\x00\x00\xff\xff\x33\xdc\xda\x8c\xd5\x00\x00\x00")

func assetsRouterServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceAccountYaml,
		"assets/router/service-account.yaml",
	)
}

func assetsRouterServiceAccountYaml() (*asset, error) {
	bytes, err := assetsRouterServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-account.yaml", size: 213, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0xe3, 0x6, 0x3a, 0x88, 0x2e, 0x33, 0xe3, 0x24, 0xf0, 0xf0, 0xe9, 0x43, 0xc8, 0x46, 0x6c, 0x60, 0x9, 0x69, 0x84, 0x3, 0xd8, 0xc3, 0x80, 0xb, 0xab, 0x37, 0x13, 0xce, 0xf2, 0xeb, 0x60}}
	return a, nil
}

var _assetsRouterServiceCloudYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x4b\x03\x31\x10\x46\xef\xf9\x15\x1f\xf4\xdc\xa2\xd8\x83\xe4\x68\x4f\x82\x48\x41\xf1\x3e\x66\x67\xbb\xc1\x6c\x26\xcc\xcc\x2e\xf8\xef\x65\xb7\x2d\x28\x8a\xc7\x3c\x32\x2f\x2f\xb3\xc1\x93\x50\x87\x07\x2a\x54\x13\x2b\x5e\x58\xe7\x9c\x18\x2e\x68\x85\x12\x23\x57\xf4\x2a\xd5\x21\x3d\x7c\x60\xa8\x4c\xce\xba\xe0\x54\x64\xea\xc0\x75\xce\x2a\x75\xe4\xea\xb6\x0b\x1b\x3c\xd6\x93\xb2\x19\x0e\x52\x5d\xa5\x14\x56\x58\xe3\x94\xfb\x9c\x30\x53\x99\xd8\x40\xca\xa0\xd6\x4a\xe6\x0e\xe4\xd0\xa9\x7a\x1e\x79\x17\x3e\x72\xed\xe2\xb5\x20\x50\xcb\x6f\xac\x96\xa5\x46\xcc\xb7\x61\x64\xa7\x8e\x9c\x62\x00\x36\x78\xa6\x91\x91\x0d\xc6\xfe\x43\x01\x54\x1a\xd9\x1a\x25\x8e\x90\xc6\xd5\x86\xdc\xfb\x36\x9f\xa3\x02\x50\xe8\x9d\x8b\x2d\x12\x2c\x0d\xf1\xf2\x9f\xb0\x34\x2e\xd4\x3f\x1b\xc7\x75\x27\xd7\x95\x04\xc0\xb8\x70\x72\xd1\xdf\x63\x40\x13\xf5\xd5\xb7\x5d\x9f\x8e\x18\xdc\xdb\x7a\xaf\xa9\xb8\x24\x29\x11\xaf\x87\xe3\x99\x88\x7a\xc4\xfd\xcd\x7a\x70\xd2\x13\xfb\x71\x45\x97\x99\xef\x0a\xfb\xd7\xb1\xdf\xdf\xfd\x29\xb1\xf0\x15\x00\x00\xff\xff\x91\xcc\x0c\xca\xd1\x01\x00\x00")

func assetsRouterServiceCloudYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceCloudYaml,
		"assets/router/service-cloud.yaml",
	)
}

func assetsRouterServiceCloudYaml() (*asset, error) {
	bytes, err := assetsRouterServiceCloudYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-cloud.yaml", size: 465, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7b, 0x59, 0x22, 0xef, 0x2a, 0xd8, 0xf7, 0x99, 0x83, 0x79, 0x7, 0x93, 0x75, 0x2b, 0x58, 0x79, 0x70, 0x28, 0xa7, 0x30, 0x4e, 0x7c, 0x7, 0xa2, 0x2b, 0x32, 0xce, 0x57, 0x40, 0x10, 0x50, 0x7b}}
	return a, nil
}

var _assetsRouterServiceInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\x31\x6b\xfb\x30\x10\x05\xf0\x5d\x9f\xe2\x41\xd6\xff\xbf\x34\x24\x94\x56\xab\xa7\x6c\x86\x96\xee\x87\x7c\x49\x8e\xca\x92\xb8\x3b\xbb\xf4\xdb\x97\x38\x0d\xb8\x74\xc9\x22\x90\xee\xe9\xf7\xb8\x0d\xba\x3c\x99\xb3\xe2\x95\x75\x96\xc4\xf8\x14\x3f\x63\xe0\x23\x4d\xd9\x31\x53\x9e\xd8\xc2\x06\x87\x72\x52\x36\x43\x57\x8b\x6b\xcd\x99\x15\xd6\x38\xc9\x51\x12\xa8\x94\xea\xe4\x52\x8b\x81\x94\x41\xad\x65\xe1\x01\xe4\xd0\xa9\xb8\x8c\xfc\x10\x3e\xa4\x0c\xf1\xd6\x11\xa8\xc9\x3b\xab\x49\x2d\x11\xf3\x36\x6c\x50\x68\xe4\x7f\xcb\x69\x8d\x12\x83\xca\xf0\x87\x35\xf6\x5f\xe4\xa5\x3f\x06\xc0\xbf\x1a\xc7\xdb\x1a\x87\x3e\x00\xad\xaa\xdb\x65\xf4\x7f\x21\x23\xce\xee\x2d\x00\xd7\x49\xc4\xf3\xe3\xf5\xa2\xd5\x6b\xaa\x39\xe2\xad\xeb\x97\x17\x27\x3d\xb1\xf7\x4b\xe8\xe7\xcf\x9a\xb0\x95\xb1\xdf\xef\xee\x44\x6c\xa5\x8c\xec\x2a\x69\xed\x6c\x5f\x76\x4f\x77\x40\x4b\xec\x3b\x00\x00\xff\xff\x90\x5e\x33\xca\xad\x01\x00\x00")

func assetsRouterServiceInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceInternalYaml,
		"assets/router/service-internal.yaml",
	)
}

func assetsRouterServiceInternalYaml() (*asset, error) {
	bytes, err := assetsRouterServiceInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-internal.yaml", size: 429, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x63, 0x52, 0x85, 0x8b, 0x99, 0xe6, 0xc7, 0xcb, 0x34, 0x3d, 0x8d, 0x43, 0x65, 0x10, 0x63, 0x51, 0x80, 0xc1, 0x29, 0x17, 0xb6, 0x8f, 0x84, 0xdc, 0xf8, 0x33, 0xa1, 0x21, 0xc2, 0x5a, 0x4f}}
	return a, nil
}

var _manifests00ClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x95\x41\xaf\xd3\x30\x0c\xc7\xef\xfd\x14\xd1\xdb\x0d\x69\x9d\xb8\xa1\xdd\x10\x48\x9c\xe0\x49\x08\x71\xf7\x52\x6f\x35\x4b\xe3\xca\x76\x36\xc6\xa7\x47\x6d\xd3\xf7\x78\x5d\xdf\x36\xe0\xc1\xa9\x8d\xe3\xd8\xbf\xd8\xff\x24\x0b\xf7\x2e\x24\x35\x14\x27\x1c\xd0\x6d\x59\x9c\xd5\xe8\xb8\x45\x01\x63\x71\x64\x8a\x61\x5b\x16\x0b\xf7\xe5\xfe\xfd\xfd\xda\xbd\x75\x81\xcd\xf1\xb6\xf3\x52\x74\x5a\x73\x0a\x95\xdb\xa0\x13\x6c\x03\x78\xac\xdc\xe6\xd4\x87\x52\x47\xb1\x0f\x15\xa1\x41\x6d\xc1\xa3\xf6\xd1\x8f\x35\xf9\xba\x58\x3c\xcd\x02\xde\x12\x84\x70\x72\x11\xb1\x52\x07\xde\xa3\x6a\x59\xec\x29\x56\xeb\x11\xf0\x33\x07\x2c\xa0\xa5\xaf\x28\x4a\x1c\xd7\x4e\x36\xe0\x4b\x48\x56\xb3\xd0\x0f\x30\xe2\x58\xee\xdf\x68\x49\xbc\x3a\xbc\x2e\x1a\x34\xa8\xc0\x60\x5d\xb8\x9e\x60\xdd\x25\x8b\x5a\xd3\xd6\x96\x14\x77\x82\xaa\xcb\x31\x7d\x21\x29\xa0\xae\x8b\xa5\x83\x96\x3e\x08\xa7\x56\xbb\x65\x4b\x77\x77\x57\x38\x27\xa8\x9c\xc4\x63\xb6\x79\x8e\x5b\xda\x35\xd0\x6a\x3f\x7c\xdc\x5d\x3f\x54\x94\x03\x79\x04\xef\x39\x45\x1b\x6c\x18\xab\x96\x69\x1c\x65\x8f\x71\xe0\x05\xf3\x44\xcb\x55\xf6\x3f\xe0\xe0\x7c\x40\xd9\x8c\x24\xaf\xee\x8a\x73\x3e\x68\x7b\x8a\x09\x61\x85\x6d\xe0\x53\x73\x6b\x90\x86\x23\x19\x0b\xc5\x5d\xe9\x59\x90\xb5\xf4\xdc\x9c\x47\xcd\xdc\xd9\x7b\x12\xd9\x0b\x82\x61\xff\xbb\x43\xeb\xbf\xa9\xad\x3a\xd3\x79\xbe\x67\xdb\x36\x53\xeb\xa1\xf3\xbd\x9c\xa6\x86\x0d\xc5\x8a\xe2\x6e\xb0\x3f\x7a\x4c\xa6\x2e\x33\x06\xd2\xe1\xe7\x08\xe6\xeb\x19\xd6\x51\x21\xe5\x83\x78\x66\x39\xb3\xa0\x3c\x47\x13\x0e\x01\x45\x9f\x31\xaf\xd4\xc0\xd2\x4d\x6d\xc9\x8b\xcb\x1b\x11\xaa\xa8\x82\x9e\x25\x6b\xe8\x71\xf8\x1b\x29\x07\x69\x5f\xdd\xeb\x56\x40\x4d\x92\xb7\x24\xf8\x64\xa3\xf8\x90\x3b\xff\x41\x4b\x9d\x6c\xc6\x7a\x44\xb4\x23\xcb\x7e\xc2\xd2\x35\xe3\x0f\x59\xb2\x1c\xc6\x12\x5d\x6e\xf8\x0b\xe5\x98\xad\xe7\x28\xf6\x85\xfb\x48\x22\x2c\x58\xb9\xad\x70\xe3\x40\x15\x4d\x57\xc2\xc9\x50\x56\x0d\x9a\x90\xd7\x55\x0e\xb9\xec\xb4\x5a\x9e\xa0\x09\x33\x87\xa4\x5b\x71\x85\x6c\x88\xaa\x63\xd8\x99\xaa\x5e\xc6\xb9\x01\xa3\x3b\xa6\x18\x8d\xfc\xe5\x73\x6a\xbc\xc7\x28\x78\x20\x3c\xce\xf7\xe0\x65\x48\xae\x5f\x18\x9a\x36\xdf\xd0\xdb\xf0\x7e\xfc\x5b\xa0\x9b\x3b\x34\x01\x98\xde\x39\xff\x11\xe4\x2f\xa4\x7b\x03\x87\xa2\x4f\x42\x76\xba\x82\x32\xba\x75\xb7\x22\x7e\x37\xcf\x51\x4d\x80\xce\x1e\xab\xa4\xf8\xcb\xe2\x4f\xdd\x33\x3b\x4c\xd4\xac\x96\x6f\x92\xe2\x67\x00\x00\x00\xff\xff\xbc\x83\x43\x0f\xbe\x08\x00\x00")

func manifests00ClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00ClusterRoleYaml,
		"manifests/00-cluster-role.yaml",
	)
}

func manifests00ClusterRoleYaml() (*asset, error) {
	bytes, err := manifests00ClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-cluster-role.yaml", size: 2238, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x62, 0xc4, 0xe8, 0xc9, 0x4, 0x29, 0x5a, 0x9a, 0xa2, 0x45, 0x96, 0x7, 0xdc, 0xe8, 0xca, 0x99, 0x88, 0xfc, 0xe0, 0xce, 0x70, 0xc0, 0x9e, 0x7c, 0x7b, 0xb1, 0x13, 0xd3, 0x6c, 0x4e, 0xb7, 0x68}}
	return a, nil
}

var _manifests00CustomResourceDefinitionInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x51\x6f\xdc\xc8\x0d\x7e\xf7\xaf\x20\x36\x0f\xf7\x62\x69\xcf\x97\xb6\x28\x16\x28\x8a\xc0\xb9\x14\x46\x73\x6e\x10\xbb\x29\xd0\xc4\xc0\xcd\x6a\x28\x89\x17\x69\x46\x37\x1c\xad\x6f\x5d\xf4\xbf\x17\x9c\x91\xb4\xd2\xae\xb4\x36\x1a\xdc\x3c\xed\x72\x28\xf2\xe3\x47\x0e\x87\x92\x6a\xe8\x13\x3a\x26\x6b\x36\xa0\x1a\xc2\xdf\x3c\x1a\xf9\xc7\xe9\xd7\x3f\x73\x4a\x76\xbd\xbb\xda\xa2\x57\x57\x17\x5f\xc9\xe8\x0d\x5c\xb7\xec\x6d\xfd\x11\xd9\xb6\x2e\xc3\xb7\x98\x93\x21\x4f\xd6\x5c\xd4\xe8\x95\x56\x5e\x6d\x2e\x00\x8c\xaa\x71\x03\xda\xb0\xc3\xcc\x3a\xcd\x29\x99\xc2\x21\x73\x6a\x1b\x74\xca\x5b\x27\x3f\x0c\x97\x94\xfb\x94\xec\x05\x37\x98\xc9\x63\x85\xb3\x6d\xb3\x81\xf3\xca\xd1\x3a\x8b\x3e\x40\xc4\xf4\xf6\xf6\xee\x63\x70\x14\x64\x15\xb1\xff\xfb\x54\xfe\x9e\xd8\x87\xbd\xa6\x6a\x9d\xaa\xc6\xd0\x82\x98\xc9\x14\x6d\xa5\xdc\x68\xe3\x02\x80\x33\xdb\xe0\x06\x56\xab\x0b\x80\xc6\x21\xa3\xdb\xe1\x3f\xcd\x57\x63\x1f\xcd\x3b\xc2\x4a\xf3\x06\x72\x55\x31\x8a\x6a\xbb\x75\x1d\x25\x1d\x32\xf6\xca\xb7\xbc\x81\xff\xfc\xf7\x02\x60\xa7\x2a\xd2\x4a\x68\x8a\x9b\x12\xd0\x9b\x0f\x37\x9f\x5e\xdf\x65\x25\xd6\x2a\x0a\x01\x34\x72\xe6\xa8\x09\x7a\xb0\x1a\xd0\x03\x31\x28\x09\x06\x22\x34\xa8\x95\x51\x05\x6a\x20\x03\xbe\x44\x78\xb2\x06\x19\xb4\xa4\x02\x35\x6c\xf7\x12\x44\x9a\x59\x93\x53\x31\xa1\x6e\x9d\x55\x2d\x7b\x74\x9d\x37\x80\x54\x88\x4f\x9b\x76\x5b\x51\xf6\x6f\x6b\x10\x94\xd1\xbd\xd0\xd1\x4e\x79\x14\x69\x0a\x5f\x0c\x5c\xc7\x47\x41\xe9\x9a\x8c\x00\xa0\xa6\xad\x42\x44\x60\x73\xf0\x25\xf1\x60\xb5\x27\x42\x60\x1b\xeb\x81\xdb\xa6\xb1\xce\xa3\x4e\xe1\xbe\x24\x9e\xec\x5b\x53\xed\x21\xb7\x0e\xc8\x78\x74\x46\x55\x90\xd9\xba\x6e\x0d\x65\xc1\xf6\x60\xd3\xe6\xf0\x8f\x06\xcd\x9d\x44\x02\x7d\x5d\x70\xba\xea\x14\xfc\x5e\x12\x65\xb7\xbf\x60\xe6\x3b\x51\xe3\x44\xcd\x53\x9f\x0f\x59\xa3\x52\x1f\x64\x47\xac\x7f\x27\x69\x89\x3a\x1d\xa3\x1c\x38\xde\x45\x19\x6a\xe0\x90\xb2\x3e\x6a\x70\x18\x4a\xc3\xf8\x29\xe0\x0e\xb4\x32\x1d\xaa\x14\xee\xa4\x7c\x1c\x03\x97\xb6\xad\x34\x64\xd6\xec\xd0\xf9\x90\xd2\xc2\xd0\xd3\x60\x99\xc1\xdb\xe0\xb2\x52\x1e\xd9\x4f\x2c\x0e\x2c\xed\x54\xd5\xe2\x65\xc8\x57\xad\xf6\xe0\x50\x7c\x40\x6b\x46\xd6\x82\x0a\xa7\xf0\x93\x75\x08\x64\x72\xbb\x81\xd2\xfb\x86\x37\xeb\x75\x41\xbe\x3f\xdc\x1d\xdd\x7e\xbf\xce\xac\xf1\x8e\xb6\xad\x10\xbb\xd6\xb8\xc3\x6a\xcd\x54\x24\xca\x65\x25\x79\xcc\x7c\xeb\x70\xad\x1a\x4a\x02\x70\xe3\x43\x87\xa8\xf5\xab\xa1\xec\xbf\x1b\x21\x8d\xf9\x60\xef\xc8\x14\x83\x38\x9c\xd5\x45\xde\xe5\xc4\xc6\x42\x8f\x8f\x45\xfc\x07\x7a\x45\x24\xac\x7c\xfc\xf1\xee\xfe\x50\x42\x93\xc2\x0b\x9c\x07\xb6\x0f\x8f\xf1\x81\x78\x21\x8a\x4c\x8e\x2e\x26\x2e\x77\xb6\x0e\x16\xd1\xe8\xc6\x92\xf1\xe1\x4f\x56\x11\x9a\x29\xe9\xdc\x6e\x6b\xf2\x92\xe9\x5f\x5b\x64\x2f\xf9\x49\xe1\x5a\x19\xa9\xed\x2d\x42\xdb\x68\x15\x8a\xfb\xc6\xc0\xb5\xaa\xb1\xba\x56\x8c\xbf\x3b\xed\xc2\x30\x27\x42\xe9\xf3\xc4\x8f\x3b\xf3\x54\x71\x72\x62\x00\xfa\x3e\x3c\x9b\x21\xd9\x94\x04\x09\x4b\xf2\x9b\xf2\xee\x90\xc6\xa3\x80\xa2\x4d\x4e\x1a\x10\x96\x6a\x47\xd6\x0d\x72\xc3\xa1\x6d\xa5\xcf\xb9\x87\x40\xb1\xd8\x18\x83\x48\xc4\xc0\xad\xaa\x71\x22\x8b\x9d\xf0\xfe\xfe\xfd\x9c\x74\xdf\x4c\x95\xbd\x72\x05\xfa\x71\xa1\xcc\x75\x87\x10\x71\x74\x35\x15\x1e\x11\xd1\xe9\xf4\x5c\x94\x96\xbd\xdc\x48\x7d\xb8\x87\x3e\x7d\x64\x64\x36\x37\x5d\x86\xc8\xbc\x47\x53\xf8\x72\x03\x57\x93\xad\x21\xcc\xb3\x88\x06\xad\x1e\x53\x77\x4f\x04\x89\x01\xa1\xdf\x68\x4e\xe1\x26\x87\x27\x74\xf6\xb2\x4b\x57\xae\xda\xca\x1f\xd9\x05\x31\xf1\xfa\xfb\x74\x16\xbb\xb4\x9f\x62\x74\x7f\xc4\x95\x5b\x57\x2b\x1f\x76\xff\xf4\x87\xd3\xc0\xa8\x6e\xeb\x0d\x7c\x3f\x17\x96\x18\x7d\x41\x5c\xfb\x66\x20\x7b\x74\x09\x0a\xa4\x14\xde\x59\x07\xf8\x9b\xaa\x9b\x0a\x2f\x61\xf5\x66\x05\xf6\x18\x1e\xc0\xea\xfa\xf6\xcd\x4f\x3f\xae\xe6\x63\x9a\xcd\x07\x9a\xb6\x3e\x46\x96\x40\x30\x73\x22\x7d\x33\x91\x74\xa5\x76\x36\xac\x4e\x07\x94\x1b\x32\xd5\x89\xe6\x21\x2a\xe7\xd4\xfe\x94\xd8\x1b\x8f\x35\x1f\x17\x0c\x00\x05\xf1\x09\x09\xb3\xd1\x76\x43\xca\xe2\x91\x0f\xdb\x3d\xf7\xb5\xe5\x70\x5d\xa1\xf1\xd5\x1e\xec\x36\xcc\x43\xba\x57\x3a\x1c\xf6\x8f\x2f\x3d\xed\x4b\x87\x30\xcc\x33\x67\x19\x8c\x13\x8f\xf0\x17\xba\xd1\x04\x41\xc7\x28\x19\x40\x95\x95\x41\xf5\xe5\xb4\x2e\x90\x37\x71\xfe\xf6\xf6\x4e\xc6\xa2\xbb\x09\x39\x07\x0c\xaa\x47\xf0\x48\xbe\x24\x23\x17\x5a\xd7\x2d\x4f\xcc\xc2\x2c\xba\x45\xbe\xce\xb3\x16\x97\x9c\xf4\x30\x8f\xcf\xee\x1e\x8f\x98\x07\xed\x40\xa6\x32\x7b\x18\x8b\x98\x6d\x46\x72\xb9\x85\x58\x24\xce\x59\x9b\x30\xe2\xbc\x9f\x47\xc3\xd0\x78\x93\x43\x18\x2e\xb9\xec\x6f\xef\x4e\x31\x57\x54\x71\x6c\x43\x5f\x56\xef\x14\x55\xa8\xbf\xac\x16\x6c\x0f\x80\xe0\x91\xaa\x4a\x6e\x5c\x46\x1f\x01\x09\xd5\x8a\xad\x89\x73\x10\x32\xab\x02\xbb\x08\xb7\x9d\xc7\x25\xa3\xaa\xe5\xa1\x63\x0b\x9a\xd6\x61\x3a\x8f\x60\xb9\x58\xe2\x5a\x28\x99\x19\xba\xbb\xc2\xb9\x1e\x02\x22\x86\x5f\x5a\xf6\x7d\x01\x19\xad\x9c\x3e\xc4\xbb\x60\x12\x20\x0f\x2f\x1f\xa7\x65\x33\xc6\xbb\x50\x3c\x71\xcd\x5d\xb3\xe3\x95\x74\xe5\xbc\xb8\xed\xa7\x37\xec\x78\x9d\x2f\xcf\xb8\x2a\xc5\xfe\xde\x29\xc3\x21\xce\x7b\x3a\xbd\x70\x4f\x03\x9a\xed\xd3\xe3\xd5\x5f\x43\x32\x8d\x25\x9e\xea\x25\x80\xd0\x57\xca\x37\xfb\x8c\xc5\xf7\xcd\x66\x4e\x9b\xf0\xff\x65\xe6\xcc\x14\x71\x62\xeb\x77\xf7\xa5\x0d\x4b\xa9\xbf\xa0\x07\x75\x9a\x7d\x1f\x95\xde\x01\x8f\x25\x76\xad\xdd\x0d\x2f\xc0\x5d\x23\x41\x3d\x5f\xf7\xcf\x56\xfd\xf3\x75\x49\x8b\xe7\xe1\xb8\x6d\x92\xee\xe1\x92\x96\x99\x3c\xa7\xf0\x52\xa1\x3c\x64\xca\x84\x77\x02\x46\x2d\xaf\x71\x39\x99\xe3\x29\x70\x02\xba\x9b\x68\x64\x84\x44\x7d\xe8\x9b\xd6\xc0\x9b\x7f\xdd\x45\x2e\x3a\x8b\x39\xfa\xac\x44\x0d\x2d\x9f\xcf\xcb\xcf\x37\x6f\x7f\x06\xc5\x40\xa1\x1b\x7f\xbe\x7a\x08\xc6\x9e\x5a\x87\xcb\xe6\xc2\x43\x67\x6c\x2a\x79\x2b\x6b\x1c\x26\x1a\x3d\xba\x3a\x7c\x65\x08\x13\xaf\x78\xf8\xe1\xe1\x52\x5c\xfc\xed\xfa\xc3\x9c\x83\x33\x56\x0f\xae\xcf\x3b\x78\xfd\x10\x38\xf9\x7c\xf5\x70\x78\x93\xd2\x36\xe3\x54\x3d\x72\xaa\x6a\xf5\x64\x4d\x9a\xd9\x7a\x9d\x55\xb4\x8e\xaf\xcc\x6b\x87\x39\x3a\x34\x19\xae\x9d\x6d\x3d\xfe\xf1\xf5\xba\x40\x9f\x44\x96\x93\xc0\x72\xe9\xeb\xea\x95\x0d\xf9\x5c\xea\x72\xb2\x3e\xff\x70\xec\xb4\xa6\xcc\x59\xb6\xb9\x0f\x3e\xd1\x24\x2d\x07\xcf\x4a\x28\x5e\x1b\xf4\x8f\xd6\x7d\x5d\x6b\xc3\x6b\xf1\xf3\xd7\x1d\xe1\xe3\x5f\xc2\x5e\x92\x55\x94\x44\x7c\xaf\xd4\x53\xd2\x69\x26\xda\x70\x40\x94\x70\x69\x1f\xcf\x21\x79\x3d\x42\x92\x55\xb6\xd5\x69\x61\x6d\x51\x61\xc0\x21\xfe\x04\xde\x28\xf2\xdd\xd5\xba\xfb\x4c\x24\xc7\x8b\x85\x81\xa5\x1b\xf6\x45\x87\xde\xab\xe2\x4c\x8f\x9a\x9e\x0f\xd1\x3d\x3e\x0a\xbf\xb6\xe8\xf6\xb3\x15\x7f\x26\xea\xe1\x2c\x5c\x0e\xaf\xfc\xe1\x1b\x21\x7b\x55\x14\x64\x0a\xd5\x50\xa8\xf1\xe3\x63\x27\xc5\x77\xae\xa0\x63\xa9\x76\x15\x78\xaf\x0a\x0e\x35\xe8\x55\x91\xe4\x54\x79\x74\x7c\xf9\x0d\x25\xb7\x00\x34\xd4\xe0\xf0\xb5\x64\x52\x81\xcf\x25\xe6\xec\x65\x0e\xa0\x74\x1c\x18\x54\xf5\xe1\x05\x97\xef\x49\xb6\x77\xfd\xd7\xdf\xdd\xd5\xe1\x5f\x30\x90\x74\x1f\x72\x77\xb1\xc5\xc7\x81\x7f\x03\xde\xb5\xd8\x7d\xe3\xb4\x4e\x2e\xd2\x28\x39\xdc\x63\x2a\xcb\xb0\xf1\xa8\x6f\x8f\x3f\xd4\xae\x56\x93\xaf\xb0\xe1\xef\x68\x62\x85\xcf\x0f\x17\xd1\x2a\xea\x4f\x3d\x0e\x11\xfe\x2f\x00\x00\xff\xff\x3b\xc1\x21\x25\xa4\x16\x00\x00")

func manifests00CustomResourceDefinitionInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionInternalYaml,
		"manifests/00-custom-resource-definition-internal.yaml",
	)
}

func manifests00CustomResourceDefinitionInternalYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition-internal.yaml", size: 5796, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0x96, 0x1d, 0x70, 0x56, 0x61, 0xe2, 0x7a, 0xfb, 0x1e, 0x5a, 0xff, 0x33, 0xc7, 0xb6, 0xf8, 0xbc, 0xa8, 0x5a, 0x54, 0xb2, 0x91, 0x5b, 0xc, 0x24, 0xfc, 0xb2, 0xc8, 0xc8, 0x43, 0x30, 0x17}}
	return a, nil
}

var _manifests00CustomResourceDefinitionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\xeb\x6f\x1c\xb7\xf5\xe8\x77\xff\x15\x07\xca\x07\xdb\xbf\xab\x1d\x45\x76\x12\xe4\xaa\x45\x2f\x14\x49\x49\x8c\x3a\xb2\xe1\x55\xd3\xdb\xd6\x85\xc1\x9d\x39\xbb\xcb\x6a\x86\x9c\x90\x9c\x95\x37\x45\xff\xf7\x8b\xc3\xc7\x3c\x76\x38\x0f\xc9\xf6\xfd\x50\x68\x81\x20\xd6\x0c\xe7\xf0\xf0\xf0\xbc\x79\x48\xb2\x92\xff\x8a\x4a\x73\x29\xce\x80\x95\x1c\x3f\x1a\x14\xf4\x97\x4e\x6e\xbf\xd7\x09\x97\x27\xbb\xd3\x15\x1a\x76\xfa\xe4\x96\x8b\xec\x0c\x2e\x2a\x6d\x64\xf1\x0e\xb5\xac\x54\x8a\x97\xb8\xe6\x82\x1b\x2e\xc5\x93\x02\x0d\xcb\x98\x61\x67\x4f\x00\x52\x85\x8c\x1e\xde\xf0\x02\xb5\x61\x45\x79\x06\xa2\xca\xf3\x27\x00\x82\x15\x78\x06\x5c\x6c\x14\x6a\x9d\x4a\x61\x94\xcc\x73\x54\x3a\x91\x25\x2a\x66\xa4\xa2\x7f\x08\xbd\xe5\x6b\x93\x70\xf9\x44\x97\x98\x12\xc0\x8d\x92\x55\x79\x06\xf1\x46\x0e\xaa\xa6\x76\x00\x0e\xcb\x57\xae\x83\x8b\xba\x03\xfb\x2e\xe7\xda\xfc\x39\xfe\xfe\x35\xd7\xc6\xb6\x29\xf3\x4a\xb1\x3c\x86\xa2\x7d\xad\xb9\xd8\x54\x39\x53\x91\x06\x4f\x00\x74\x2a\x4b\x3c\x83\xa3\xa3\x27\x00\xa5\x42\x8d\x6a\x87\x7f\x11\xb7\x42\xde\x89\x1f\x39\xe6\x99\x3e\x83\x35\xcb\x35\x52\xd3\x6a\xa5\x3c\x11\x3d\xe6\x3a\x65\x39\xba\x7f\x02\xe4\x6c\x85\xf9\x12\x73\x4c\x8d\x54\x6f\x99\xd9\x9e\x41\xa2\x0d\x33\x95\x4e\xb4\x7f\xea\x5b\x12\x89\xde\x61\x99\xf3\x94\xe9\xd0\xb0\xc4\x34\x51\xfe\x59\x68\x66\x3f\x3e\x6c\xe8\x20\xb2\x1d\xe3\x39\x5b\xe5\xf8\xae\xfd\x8d\x7b\x79\x06\xff\xfe\xcf\x13\x80\x1d\xcb\x79\x66\xe7\xd4\x61\x48\x13\x70\xfe\xf6\xd5\xaf\x2f\x97\xe9\x16\x0b\x16\xd0\xce\x50\xa7\x8a\x97\xb6\x1d\x1c\xf5\xa8\xec\xdf\xaf\x50\x03\x83\x82\x09\xb6\xc1\x2c\x10\x12\x1a\x4a\xc2\x5a\x2a\x30\x5b\xf4\x40\x01\xd2\xbc\xd2\x06\x55\x02\x37\x5b\x6c\xb7\x4b\x99\x00\x22\x32\x4f\x11\xde\x94\x28\x96\xc4\x12\xf0\x4e\x56\x06\x81\x89\x0c\xfe\x5c\xad\x50\x09\x34\xa8\xc3\x8c\xd7\x20\x6b\xe2\x27\xf0\x5e\xc0\x5f\xb7\x28\x80\x89\x3e\x5f\x00\xd7\x8e\x9b\x31\x3b\x06\x06\x02\xef\x22\xf8\xd6\x40\x33\x2c\x73\xb9\x2f\x50\x98\xd6\x77\x60\x24\xb0\x3c\x97\x77\x40\xb2\xa5\x04\xcb\xc1\x28\xb6\x5e\xf3\x94\xde\x28\x64\xe9\x96\x06\x1b\x06\xa2\xc1\x6c\x99\xa9\x41\xe2\xc7\x52\x6a\x0c\x88\x81\x54\x7e\x78\x2d\xfc\xff\x52\xd2\xcc\x88\x0d\x98\x2d\xd7\xf5\x0b\x28\xd8\x1e\x72\x64\xb6\xff\x8c\x6b\x55\xd9\x69\xa9\x01\x13\x8d\xcb\x6a\x95\xf3\x14\xd6\x2c\xa5\xcf\x05\x9a\x3b\xa9\x6e\x69\x60\x02\x53\x6a\xac\x81\xe9\xc1\x51\x83\xc2\x1d\xd7\x6d\x90\xd4\xe3\x0a\xc1\xbe\xce\x40\x56\xc6\xd2\x76\x6b\x4c\xa9\xcf\x4e\x4e\x6e\xeb\xc9\x20\xad\x92\xc9\x54\x9f\xa4\x52\xa4\x58\x1a\x7d\x12\xc6\xbe\xf0\x38\x70\xb1\x39\xf1\x3d\x2e\x0e\x45\x90\x7e\x7e\xca\x70\x87\x0a\x4a\xa9\x35\x5f\xe5\x78\x0c\x9a\x34\xd7\x2a\x47\xc8\x70\xcd\xaa\xdc\xe8\xc0\x48\x50\xe6\xcc\xac\xa5\x2a\x80\x29\x84\x4a\x63\x96\xc0\x12\x11\x88\xf6\x0d\x41\x48\x42\xed\x17\x85\x54\x04\xc3\x30\x9e\xeb\xe4\xc8\x37\x30\x7b\x12\x6d\xb9\xfa\x17\xa6\x61\x76\x4a\x45\x0a\xc9\xf0\x20\xc1\xf4\x6b\xa9\xd3\xfa\xd9\x81\x5c\x3c\x25\xc1\x71\x6d\x08\x53\x2e\xec\x9c\x23\xec\xdc\x33\xcc\x40\x5b\xa1\x02\xb9\x0e\x53\x6a\x95\x89\x30\xac\x33\x83\x56\x0e\xd7\xc4\xb6\x0e\x2b\x1a\x93\x22\x20\xa0\xb7\xb2\xca\x33\x9a\xab\x1d\x2a\x03\x0a\x53\xb9\x11\xfc\xf7\x1a\xb2\x26\x9e\xa0\x2e\x73\x66\x50\x9b\x0e\x44\x2e\x3c\x93\xee\x58\x5e\xe1\xb1\x95\x23\x9a\x58\x85\xd4\x07\x54\xa2\x05\xcd\x36\xd1\x09\xfc\x42\x04\xe3\x62\x2d\xcf\xea\xd9\xde\x70\x13\x0c\x48\x2a\x8b\xa2\x12\xdc\xec\x4f\xec\x54\xf2\x55\x65\xa4\xd2\x27\x19\xee\x30\x3f\xd1\x7c\xb3\x60\x2a\xdd\x72\x83\xa9\xa9\x14\x9e\xb0\x92\x2f\x2c\xe2\xc2\x72\x60\x52\x64\x5f\xd5\xbc\xfe\xb4\x85\xa9\x9b\x0f\x6d\x14\x17\x9b\xfa\xb1\xd5\xfe\x83\x74\x27\xdd\x4f\x82\xc9\xfc\x67\x0e\xff\x86\xbc\x4e\x86\x10\xde\x5d\x2d\x6f\x1a\x39\xa2\x29\xe8\xd2\xdc\x52\xbb\xf9\x4c\x37\x84\x27\x42\x71\xb1\x46\xe5\x26\x6e\xad\x64\x61\x21\xa2\xc8\x4a\xc9\x85\xb1\x7f\xa4\x39\x47\xd1\x25\xba\xae\x56\x05\x37\x34\xd3\xbf\x55\xa8\x0d\xcd\x4f\x02\x17\x4c\x08\x69\x48\xa2\x2a\x92\x70\x62\xda\x57\x02\x2e\x58\x81\xf9\x05\xd3\xf8\xc5\xc9\x4e\x14\xd6\x0b\x22\xe9\x34\xe1\xdb\xd6\xbf\xdb\xb0\x23\x31\xce\x5c\x0d\xce\x10\xbd\xa4\x09\xb2\xea\xb0\xc4\x94\xaf\x79\x6a\x79\xde\x89\x02\x09\xa5\xe6\x0a\x33\x58\xe1\x96\xed\xb8\x54\xe1\x79\x4f\x6f\x27\x53\x78\xc4\xa5\xd7\x61\x64\x95\xc7\x05\xbd\xb3\xfd\x63\xf7\xfd\xa1\x95\xeb\xb7\x77\x3c\xa6\x70\x8d\x0a\x05\x71\x90\x24\x96\xc3\x54\xa1\xb1\xfa\x93\x71\xd1\xa6\x5d\x8d\xe7\xb6\xd6\x5c\x90\xb6\xa0\x59\x37\x22\x83\xd5\xde\xb6\xe8\x2b\xe2\xc4\x99\x2f\x6b\x17\x74\x0f\x6a\x26\xc5\x53\xe3\xa9\x69\x21\x70\x05\xf2\x4e\xb4\x7b\x38\x8e\x8c\x99\xc6\xe0\x14\xe5\x7b\xd1\x83\x79\x63\xcd\x95\x1d\x4f\x51\xe9\x7a\x50\x16\xbf\xb5\x24\x5b\x47\xa2\x74\x8b\x7b\x6d\xd5\x87\x65\x0c\xd2\xd9\x00\x26\xd7\x49\xaa\xcc\x21\x45\xa1\x33\xe0\x35\xcf\x9d\x99\x27\xe1\xf2\x1f\xdd\xe2\xfe\x8c\x20\x1e\xbc\x7c\x2f\xe0\xd5\x1a\x2a\xa1\xd1\x1c\xf7\x60\x32\xb8\xe3\x79\x96\x32\x95\x75\xc0\xd3\xec\x54\x46\x16\xcc\xf0\x94\xe5\xf9\x1e\x36\x28\xc8\xaf\xc4\xcc\x62\xeb\x46\x6d\x3d\x8d\xe6\xa3\x1e\x6c\xae\x9d\x4f\x54\x9b\x98\x88\x81\xcc\x64\x41\x54\x79\x46\x50\x75\xb5\x72\x7f\xea\xe7\xb6\x97\xb6\x7b\x13\x7e\x0d\x1e\xad\x9e\x9f\x6a\xb8\x38\xa7\x81\xe4\xa4\x09\xba\x88\x93\xae\xde\xb8\x2f\xee\xb8\xd9\x46\x81\x7a\xdf\xe9\xa9\x06\xa3\x68\xae\xb4\x91\x0a\xad\x61\xbe\xb1\x58\x2f\x2a\xdd\x19\x29\x3c\xbb\xdb\xa2\xd9\xa2\x6a\xd0\xe9\xc1\x94\x8a\xa8\xa4\x16\x5e\x46\x31\x7b\x3e\x13\xc1\xda\x49\x7b\xda\x67\xd4\x55\xc5\x73\xb3\xe0\x02\xde\x9c\x57\x66\xeb\xb8\x5e\xd5\xe6\xb7\x16\x92\xb8\x30\xc3\x88\x40\xd3\xcf\xc6\x1d\xbd\xa7\x87\x06\xe2\x9a\x15\x18\x54\x8a\x17\x5f\x13\x55\xb3\x63\xbe\x8c\xdc\x91\x33\x83\x77\x27\xde\x91\x59\xd0\xc8\x17\x0e\x63\x7d\x62\x43\x95\x93\xaf\xec\xff\x22\xf8\x00\xdc\xbc\xb9\x7c\x73\x06\xe7\x59\x06\xd2\xce\x42\xa5\x71\x5d\xe5\xce\x3b\xd1\x49\xcb\xbf\x38\xb6\xd6\xee\x18\x2a\x9e\xfd\x9f\xa7\x11\x50\x51\x3d\x6d\xc7\x6c\xf9\x70\x42\xa9\x39\xd6\xb5\x8a\xec\xf2\x7a\x69\xe9\x17\x3c\xd4\x11\x55\xd4\x17\x41\x67\x71\x49\xa6\x48\x0d\xa6\x52\xac\xf9\xa6\x52\x08\x45\x95\x1b\x5e\xe6\x08\x6b\x64\x64\x80\xb4\x55\x10\xff\x03\x3f\x7a\x71\x7a\x2d\x59\xf6\x03\xcb\x99\x48\x51\x2d\x5d\xbf\x3d\xe0\xb5\x55\xb5\x7e\xac\xde\x92\xd2\xd1\x86\xd8\x6d\xb3\x3f\x86\x66\x08\x10\xe9\x9f\x06\x45\x9e\x8c\xca\x74\xd2\x03\x6c\x7d\x43\x0f\xfc\x6d\x0d\x7b\xe9\x41\x27\x0e\x53\xab\x74\x2b\x0a\x08\x81\xb5\x44\xd7\xab\xd2\x31\x05\x77\xec\xdc\x80\x96\xcc\x05\xe9\x71\x2a\xc5\x39\xe7\x1e\x7f\x4b\x41\xa3\x5b\x0a\x24\x8e\x6f\x5f\x85\x7b\x3c\x49\xcc\x9d\xa3\xc3\x75\xa0\x94\xa3\x06\x17\x19\xdf\xf1\xac\x62\x79\x0f\xa2\x0b\x32\x5c\x08\x88\x1a\xb4\xb4\x51\x09\x11\x85\xf4\x85\x22\x9a\x52\x58\x0b\x77\x5b\x54\xd6\xc0\x19\xa6\x36\x68\x9a\x10\xe7\xf2\x7a\xd9\x03\x1a\xe8\x4d\x78\xf9\xd1\x59\xf3\x41\x1e\x8e\xe0\xbf\x55\x08\xac\x90\x44\xce\x3c\xef\x5b\x74\x6d\x5d\xd1\x3e\x59\xfb\x4e\x92\xb3\x09\x58\x94\x66\x7f\xdc\x84\x02\x76\xbc\x16\x66\xe2\xb8\xa0\x93\x44\x38\xf1\x6a\xb2\x07\xdf\x05\xd3\x0e\xdb\x01\x65\x14\x11\xb1\x61\xe6\x19\x17\xbb\xe1\xef\xda\x52\xe4\x27\xb1\x2d\x83\x7d\xba\x34\x66\x28\x00\xb5\x34\x70\x4a\xc5\x87\x59\xfa\x18\x50\x50\xe0\x0f\xb9\x64\x19\xac\xbc\xbc\xd5\x6a\x9b\x3c\xc1\xbe\x59\x45\x93\x26\x1d\xc3\xdb\xf1\x5c\xb8\x86\x15\x23\x44\xa5\x20\xa5\xa9\x98\x36\xaa\xb2\x3e\xe6\x3d\xe9\xee\x72\x13\x21\x72\xf3\xfe\xc3\xf9\x5f\x97\x67\xae\x41\x44\x41\xc0\x33\x6b\x64\xae\x3c\x0f\xf6\x60\xda\xf4\xcc\x73\x82\xf2\x7b\xa5\xf0\x6c\x1e\x94\xe6\xab\x9f\x2e\xde\xf6\x4d\xc8\xfb\x99\xc8\x34\x60\x5e\xfd\xf0\xcb\x45\x2e\xab\xec\x6c\x96\x8e\x1b\x82\xf2\x9a\xaf\x76\x5c\x99\x33\x80\x9f\xa5\x36\xd7\x3e\x74\x7f\x2f\xe0\x5c\xec\xfd\x24\x07\xd2\xf5\x1d\x4d\x72\xec\xe1\x19\x17\x69\x5e\x65\xa4\xbf\xae\xa5\xc0\xe7\xf5\x0c\x1a\xd9\x86\x69\xa7\x7a\x98\x2f\x67\x08\xe4\x3d\x4c\x38\xc5\x3f\xe4\xe0\x1f\xd2\x79\x61\x3f\xba\x87\xbd\xdf\x36\x03\x98\x34\xfb\xad\xb6\xb0\x95\x79\xa6\xa1\x64\x8a\x15\x68\x48\xcf\x05\xf7\xae\x4d\xe5\x40\x8d\xa8\xfd\x8e\xd8\xa2\x04\xde\xba\x48\x11\xa4\x20\xa7\x68\x6d\x47\x43\x92\xd2\xa6\xf3\xa0\x09\x8f\x52\x0a\xac\xc8\x06\xee\x99\x1c\x63\xbb\xf1\xf0\x20\x3b\x5a\x20\x86\x10\x0c\x8e\x24\xc2\xcb\xf7\x1e\xd1\xf0\xfc\x83\xe5\x01\xcb\xfc\x91\x37\x63\x8c\x00\x41\xee\xe3\xaf\x0e\x03\x50\x6a\x69\xed\x22\x19\x50\x1f\x88\xda\x67\xcc\xc0\xdd\x96\xfb\x54\x5d\x87\x4e\x03\x70\x6d\x88\xe0\xb2\x77\x59\x02\x6f\x7d\x92\xca\xa7\x4c\x6c\x1e\xea\x28\x48\xf5\x91\x35\xf2\x47\xaf\x7c\xe6\xe5\x28\x4e\xf9\x11\x73\xd3\xfc\x50\x54\xc5\xd0\x48\x17\x10\x7a\x18\x6c\x30\xa8\x3a\x85\xcc\xf0\xad\x8c\x05\x6e\x07\x14\x0c\x0d\x87\x99\xec\xda\xb7\x08\x7a\xf2\xf3\x49\xd3\x01\xe4\x7b\xf3\x5f\xa9\xf8\x2e\x12\xee\xf7\xc6\xe8\xdb\x0d\x0f\xf1\xad\x6f\x10\x71\x50\xe3\x0c\x3a\x39\x34\x0f\xf1\xde\x43\xb2\x2f\xa7\xc6\x73\x14\x7a\xb1\xa9\xd2\x3e\xc5\xc9\x22\x54\x1a\x13\xf8\xd5\xba\xa7\x8e\x85\xa3\x03\x61\x64\x56\xad\xd7\x19\xb3\x88\xef\x05\x78\x03\xe2\x45\x6b\x46\x00\x01\xd6\x7b\x77\x4e\x76\x2b\x9d\xdf\x06\x0f\x61\xbe\xad\x53\x22\x5c\xea\x2d\x78\xfa\xd6\x89\xe9\xfb\x30\xe0\xf3\x2d\xb1\xa8\xbd\x49\xe2\x5b\xdf\xd7\x27\x37\x1a\xaf\x89\x8b\x4d\x02\xe7\x51\x90\x31\xb4\x0e\x96\x02\xda\xce\x5b\xd3\x55\x34\xcd\x02\xce\xb5\x9f\x17\x76\xc6\x52\xe8\xfe\xd9\xc9\x57\xa4\xb0\x46\xf5\x95\x73\xe7\x9a\x90\xc9\xba\x75\xad\xfc\x49\x13\x2e\xd5\xb1\x4a\x58\xbf\x31\x32\x2e\xb9\x96\xf1\x99\xe9\x45\x73\x81\x2e\x4f\x75\x13\x2d\x50\x78\x99\xb4\x63\xb2\x21\xee\xaa\x7b\x75\x02\x22\xec\x37\xbf\x4b\x81\xda\xa7\xd2\x6d\x70\x9a\x89\xfb\x39\xf9\x50\x3b\xfa\x6e\x45\xe4\xef\x52\xb8\x05\x24\xff\xd0\x09\x1f\x3d\x75\xab\x45\x6d\xaa\x38\x84\x8a\xc3\x8c\x6e\xf8\xd1\xe4\x57\x4a\xa1\x30\xf9\x1e\x74\x55\x96\x52\x99\x80\xbe\x74\x19\xb3\xf3\xbf\x2e\x8f\x9d\x4b\xea\xb2\xed\x3f\x5d\xbc\xad\x7d\xb7\x48\xb0\xe7\xa7\xeb\x7f\x0e\x1d\xbf\x29\xd1\xa2\xee\x48\x3b\x03\xa1\x10\x27\xb0\x8f\xe6\xe2\x9f\x73\xed\xf9\x35\xc4\x58\x9f\x5d\xd2\xc8\x11\x6b\x09\xd9\x31\xac\x64\x15\x09\xf9\x2c\x44\xd9\x1a\x0b\x7c\xff\xb5\x25\xdc\x37\xdf\xbc\x74\x89\x3b\x0a\x51\xc1\xad\x85\x95\xd2\xaf\x09\x91\x6e\x0e\xa8\x0e\xe9\x61\x26\x1a\x96\xec\x46\x44\xf1\xa8\xab\x3d\x98\x1d\x67\x83\x63\x6f\x50\xf5\x31\x79\x30\x10\xef\x05\x5c\x4a\xd4\x40\x1e\xf3\x38\xfc\x41\x3e\x88\x4f\xc3\x4c\x92\x47\x81\xc6\x14\xde\x71\xc8\xe4\x10\xa6\xf8\xb1\xcc\x79\xca\x89\xa3\xeb\x7c\x42\x43\xf8\x28\x4c\x1b\xe7\x17\x4c\x54\x36\x2d\x38\x31\x54\x47\xa3\x03\x6b\x3e\x34\xfe\x49\xb6\x8f\x58\x8f\x00\x7a\x40\xe3\x4e\x59\x93\x69\xe2\x0e\x98\xb1\x61\x6b\x52\xa3\x34\x6e\x35\x06\x39\xac\x6d\x49\x6e\x5a\xab\x27\x6d\x29\x21\xf5\x99\xed\x05\x2b\x7c\x72\x96\xe5\xb9\x4c\xa3\xf9\x5d\xfa\xad\xf6\x4d\xb6\xf6\x0f\xb0\x95\x77\xb8\x43\x75\x4c\xb8\x78\x2d\x66\xb3\x43\x3c\xb5\xc0\x03\x2c\x9b\x30\x18\xe6\x82\x74\xcb\xc4\x06\xeb\xd5\xc7\x1a\x37\xbf\xf6\xea\x33\xaf\x41\xc5\x1f\x92\x24\xae\xb2\xc8\x1a\x85\x5a\x8b\x7e\xac\x09\xd3\x6e\xf3\x90\xcb\xbc\x98\x15\x9f\x53\xbb\x96\x22\x8e\xbe\xf7\xd2\x1e\x7d\x37\xc6\xe5\x36\x49\x5c\xb2\x14\x43\x21\xc8\x78\xf2\xa8\xd7\xbc\x9d\x33\x5a\xf3\xdc\xa0\xf2\x85\x06\x86\x48\x5d\x37\xef\x6b\x81\xe9\x44\x2f\x71\x19\xd7\xbe\x03\x9b\x9f\xa6\xee\x8a\x32\xb7\x96\x30\x46\x68\xbd\x65\x21\xf7\x37\x98\x38\x12\x01\x4f\x12\x8a\xcf\x94\xf9\x2f\x98\x49\xb7\x57\x1f\x89\x45\x6c\x59\xd3\xa4\x37\x7c\xf8\x81\x4b\x82\xe7\x5c\x5b\xaa\xd9\xc2\x1c\x08\x35\x38\x21\x60\x2d\xec\x32\x70\x3c\x9f\x6f\xd7\x12\x9a\x56\x56\x0c\xcf\xaf\x2f\x31\x1b\x76\xe6\x99\x52\xac\x9f\x59\x01\xe0\x06\x8b\x81\x18\xb7\x33\x84\xf3\x11\x34\xfd\x02\x78\x78\x63\xd3\xba\x5e\x29\xc5\xcd\x01\x78\x87\x9f\xfc\xc1\x5b\xdc\x3b\x4b\xc0\x44\x5d\x8c\xe5\x40\x28\xcc\xeb\x88\xf9\x16\xf7\xb6\x91\x2f\x0f\x88\x2b\xad\xf1\x44\xc0\x78\x2a\x80\x04\xe7\x16\x63\x14\xa2\x37\x01\xb1\xb8\x5b\x3a\x91\x2b\x00\x02\x3c\xf4\xea\x80\xcc\x34\x4e\x1f\x35\x39\x7a\xd3\x03\x4b\x0d\x27\x66\x9e\xc4\xac\x2c\x73\x3e\x60\x6b\xdd\xcf\xc8\xa1\x90\x7f\x56\xd0\x1f\x06\x3c\x13\xed\x7a\xe2\x9a\x0a\x06\x37\xb5\x4f\xb5\x9b\x46\xe2\xfa\x2d\x2f\xed\xba\xf5\x08\xd6\x5e\x8f\x84\x22\x10\x17\x1c\x06\xe0\x8e\xcf\x5f\x89\x63\xb8\x96\x86\xfe\x77\xf5\x91\x6b\xa3\xa3\x39\xfc\xe6\x47\xce\xd0\xb5\x34\xb6\xed\x27\x91\xc4\x21\x35\x93\x20\x3e\x27\x43\x82\x21\x9c\xec\xd1\xb8\xda\x35\x22\x3a\x21\xa5\x45\xb3\x3a\xca\x5c\xee\xc7\x35\xf9\x0d\x52\x85\x91\x9b\x6d\x2b\xed\x43\xc0\xc3\xa2\x87\x90\x62\x61\x97\x29\x02\xf4\x11\xa0\xf5\xa4\x71\x1d\x48\x29\x55\x87\x5e\x03\x1d\x8d\xc0\x5c\x21\xf8\xee\xad\x32\x77\xdf\xb8\x7a\xa3\x9c\x91\xfa\xcf\xac\xab\xec\xea\x65\x98\xc1\x0d\x4f\xa1\x40\xb5\x19\xc3\xb3\x24\xed\x39\x35\x75\x43\xfa\xcd\xd3\x6f\x58\xcb\xb5\x81\x0c\xcc\xbf\x55\xdf\xaf\x49\x1c\x67\xaa\x7a\xd7\xd6\xa9\xc5\x82\x95\x34\xf5\xff\x26\x3d\x67\x29\xf9\x1f\x28\x19\x57\x9a\x3c\x34\x72\x23\xf3\xf8\xd0\xdb\xed\x7d\x19\x44\x1b\x34\x41\xe5\x1a\x48\xa1\xed\x58\x4e\x3a\x98\x24\x4b\x00\xe6\xc3\x71\xa3\x5c\xf7\x0c\xd1\x31\xdc\x6d\xa5\x46\x5f\x05\x41\x0e\x13\xd7\x70\x74\x8b\xfb\xa3\xe3\x0e\x6b\x02\x8f\xeb\x9a\xa3\x57\xe2\xe8\x38\x14\x1f\x74\x19\x25\x18\x00\x17\x97\x1e\xd9\x77\x47\x49\xcf\x76\x0d\x46\xe5\x13\xf6\x6c\x50\xcd\xb3\x2c\xb3\xd5\xc3\x2c\x7f\x3b\xa1\x97\x07\xe7\xdc\x26\x1c\x89\x5d\x09\xc3\x09\x07\xa9\xdd\xd4\xaf\x7c\xe9\x3a\x9a\x09\xde\x0d\xc8\x5d\x70\x94\xd2\x2d\x66\x55\x1e\xe3\x32\xef\xaa\x0e\x04\x2f\x8d\x83\x53\x2f\x3f\x76\x0b\x0f\xaf\xdb\x98\xf4\x80\x0f\xd6\x20\xce\xa0\xea\x68\x11\x84\xcc\x06\x5d\xc9\x38\xb5\xda\x9e\x64\xed\xb1\x1f\x18\xb6\xac\xb5\xb4\x3a\x18\x4f\xf6\x22\xa4\x71\x4f\xd0\xaf\xf6\xad\xd0\xb0\xa4\x9b\xf4\x92\x03\xfc\x91\x73\x51\x7d\xf4\x63\x5c\x28\x99\xe3\xc1\x77\xe4\x9c\xa3\x3a\x83\xa7\x4f\x7d\xbf\x75\xaf\x75\x11\x4b\x3c\x35\x7b\xe8\x4b\x93\xfc\x78\x05\xa9\xdb\x58\x8f\x84\x1e\x83\xec\x3f\xe5\x8c\xcc\xf1\x5d\x7b\x13\xf7\x99\xfd\x57\xb8\xb7\x0f\x0b\xb3\xf4\xfc\x84\x96\xff\x14\x7f\x76\xc4\x74\xd4\x8a\xee\x9e\x3e\xed\x08\xc8\x39\xde\x2e\xcc\xf1\x78\x61\xd2\xeb\x85\x51\xcf\x17\xa6\xbd\x5f\x98\xe5\x01\xc3\x94\x17\x0c\x5f\xcc\x13\x86\x09\x6f\x18\xe6\xb9\x7f\x30\xcb\x2b\xee\x0d\x63\xae\x67\x3c\x39\x00\xcb\x91\xf7\xf7\x8e\x27\xe0\x12\x97\xcd\xf3\x90\xef\x41\xa6\x29\x4f\xb9\x47\xa4\x7b\x78\xcb\x13\xe3\x69\xfb\xb4\xf7\xf5\x98\x27\x40\x1f\x78\xeb\xf3\xbc\xe6\x29\xf2\x77\x50\x99\xe7\x39\x4f\x80\x3c\xf0\xab\xa7\xbc\x67\x98\xe9\x41\xc3\x1c\x2f\x1a\xe6\xf0\xc8\x84\x37\x0d\x5f\xca\xa3\x86\x2f\xe3\x55\xc3\xa7\x79\xd6\xc3\x21\x8b\xfe\x52\xde\x35\x4c\x79\xd8\x30\xcf\xb4\xcc\xf7\xb4\x61\x8a\x2f\x8c\xcc\xd1\x17\x87\xcd\x58\x5a\x6e\x1a\x77\x1d\x91\xf6\x8b\x4f\x77\x24\x6f\xba\x89\x44\x62\x03\x92\x4f\xdb\x9b\x6d\xb0\xc4\x38\xa3\xcd\x59\x5a\xed\x64\xff\x4f\x68\x2a\xcd\x82\x89\x6c\xd1\x0c\xe1\x64\xd8\xf9\xfb\xd4\x5c\x1e\x8d\xac\x94\x99\x5b\x87\xb8\xa9\x7b\xb4\xa3\x34\x86\xa5\xbe\x96\xd3\xe3\x32\xa8\xc4\x98\xd8\x83\xc5\xdc\x99\x65\x2b\x01\xde\x81\x35\xca\x16\xe2\xfe\xb1\x16\xb7\x63\x5c\xaf\x31\x35\x7f\xf2\x4b\x27\xc3\x8a\xdc\x42\xa1\x26\xb5\x9e\xfd\x63\xf8\xd7\x9f\x1e\x98\xf6\x9b\xf6\x4e\x1c\x72\x33\x3d\xc7\x2b\xdb\xf8\xa0\xa2\xc7\xd1\xc1\xc1\x21\xda\xd9\x61\x24\x70\x45\x1c\x33\xa2\x30\x0b\x64\x42\xbb\xc6\xb6\x44\xb5\x0d\x46\xfb\x4d\x18\x75\x30\x71\xec\xf6\xfc\xe1\x68\xb9\x84\xfb\x91\x78\x5f\xcb\xa5\x0b\x36\xf1\x18\xde\xda\xd2\xf3\xe6\x89\x55\x2a\xd7\xf2\xea\x23\xa6\x55\xbc\x04\xa4\x4d\xdb\x51\x83\x3f\x3f\xb7\xf9\xe7\xc6\xa3\x73\xe3\xec\x78\x74\x0d\xe7\xcf\xcb\x6e\x3a\xda\x0e\x50\xf0\x16\xf7\x4d\x7e\xcd\x7b\x92\xae\x7a\x77\x4e\x3e\x2c\xd8\x63\x67\xde\xff\x10\xd6\xeb\x8a\x15\x17\x0e\x41\xd7\x69\x98\xe6\xb1\x79\xc8\xf3\x5a\x6f\x53\x38\x90\xe7\x0e\xb5\xff\x8f\xa9\xd9\x37\xf7\x48\xcd\x8e\xfb\x57\x76\x20\x71\xb7\xb3\xc9\xc4\xc2\xd5\x6f\x15\xcb\x13\xb8\x6c\x8a\xa4\x47\x40\xfa\xc6\xfe\xf3\x9e\xe9\xad\x6b\x45\xd6\x52\x85\xcd\x83\xbe\x6e\x7c\x8c\xe8\x56\xb9\xa5\x4c\xd4\x1a\xac\xe1\x0c\x6d\xb7\x37\x42\xc9\x94\xe1\x69\x95\x33\x05\x24\xc3\x1b\xa9\x46\xdc\xbf\x19\x73\xd2\x30\xef\x12\x53\x29\xb2\xb9\x51\xe8\xcd\xe1\x77\xed\x59\xb2\xa5\x53\xa8\xb8\x74\xcb\x98\xbc\x18\x9b\x9c\x03\x11\x7a\xe6\x2a\x0b\x03\x27\xcb\x75\xd0\x4d\xb5\xd0\x1f\xbb\x92\xde\x3b\xae\xc7\xc1\x72\xdd\xf8\x2f\x7c\x23\xa4\xc2\xec\x79\x63\x1a\x1a\x69\x4e\xe0\x87\x7d\xb0\x97\x63\x52\xc6\x4d\x58\xf3\xb7\xe9\x12\x8f\xa7\x17\x28\x3f\x5d\x8d\x8a\x58\x4b\x65\x77\xe4\x3e\xcb\xc6\xd8\xc8\x56\x10\xec\x78\x6a\x9e\x27\xf0\x77\x54\xd2\x32\xa2\xc0\x0d\x33\x7c\x57\x3b\x4e\xa1\xc8\xc8\xf8\x25\x70\x36\xa6\x60\xbe\x86\x67\x16\x20\xf0\xa2\xc0\x8c\x33\x83\xf9\xfe\x79\x58\xbb\xd4\x7b\x6d\xb0\x98\x62\x18\x5b\xf1\x3e\x52\xcb\xb9\x96\xaa\x60\xc6\xb6\xfb\xee\x9b\xb1\x35\x87\x99\xbc\xf4\x6b\xd8\x90\xd1\x50\xcf\xed\xd1\x38\x60\x0d\x6f\xa7\x27\xb4\xeb\x60\xb4\xd3\x8a\x6e\xc2\xa6\xe0\x10\xba\x8c\x2a\xd7\xc0\x6c\xf0\x2f\xe2\x49\x06\x0a\xed\xa9\x07\x5e\xae\x1e\x20\x7d\xe1\x34\x82\xd1\x04\x6d\x68\x14\xe8\x12\x76\x7b\x8a\xaa\x58\xa1\xdd\xeb\x19\xdd\x85\xee\x3e\xea\x23\x15\xc9\xc2\x1a\x09\x2f\x0e\x1b\x8e\x31\x40\x6b\xda\x5f\xbe\xe8\x0e\x48\x56\x06\xcf\xb3\x82\xeb\xc3\xbd\xde\xbd\x61\x1d\x75\xdb\xd6\x7b\xbe\x49\xf5\xe5\x3c\xdd\x5b\x85\xb9\x65\x22\xcb\xdd\x2e\xfc\x3b\x07\xbc\x37\x9e\x34\x67\xbc\xd0\xf0\x8c\x9a\xe3\x47\x56\x94\xe4\x2c\xd4\x87\x0b\x48\x72\x8a\xc5\x3e\xb4\x62\xa9\x92\x5a\xb7\x16\xf9\x9f\x47\x4b\x0c\x23\x1b\x65\xea\x9d\x7c\xce\x29\x77\x09\xeb\xba\x9e\xe4\x60\x2c\x6e\x5b\x5a\x34\x83\xed\x93\xd7\xc0\x56\xb2\x32\x7e\xe3\x69\xe8\xe4\x73\x6e\xeb\xb3\xc3\x7b\x73\x27\x50\x91\x65\x9c\x91\xd7\xee\x7d\xd3\x3a\x96\x62\x2b\xef\x7c\x19\x1a\x2b\xd0\xd3\x32\xbe\xea\x71\x48\xdf\x96\x7c\xd9\xb9\xf4\x55\x72\x4e\xd0\x6b\xd5\x2e\x48\xbd\xc7\x75\xc4\x7b\x01\x0b\x58\x1a\xc5\x53\x73\x06\x97\xd2\xea\x49\x37\xb5\x96\xe6\x9a\x62\xe0\x8c\xaf\xdd\xae\xc4\x76\xc7\x46\x3a\x44\xe3\x0e\x37\xa9\x40\x1a\x0b\x8d\x2a\x71\x9d\xd8\x32\xf0\xeb\x00\xe0\xdc\xf9\xa9\x67\x70\xde\xee\x6c\x14\x68\x83\x46\xc9\xcc\x56\x87\xd5\x10\xdb\x0f\xb4\xe8\xd7\x23\xd2\x60\x99\x6b\xc3\x87\x07\x25\x21\x8e\x20\x9f\xb7\xae\x27\x3a\xfe\x68\x4b\xd7\x7b\xef\x55\x70\x75\xde\x5a\xf9\x9d\x66\xb9\x6e\xfb\x03\x76\xf3\x04\xb7\xfb\x7c\x42\xc3\x78\x68\x44\x5f\xf3\x18\xa7\x8d\x6c\x42\x4e\xea\x6a\x55\xd7\xf9\x58\x60\x6d\x57\x38\x68\x32\x3d\x4a\xff\x38\xfd\x67\xd8\xc1\x30\x5c\x09\xe4\x76\x7b\xc5\xd7\x30\x5d\xd2\xc6\x42\x7b\xaa\x1b\x07\xd1\xa9\x3d\xcb\x8c\xd4\x45\xeb\xec\x82\x6d\xb5\x4a\x52\x59\x9c\xd4\x55\xbb\x27\xac\xe4\x27\xab\x5c\xae\x4e\x0a\xa6\x0d\xaa\x13\x0b\xec\x64\x77\x7a\x62\x37\x31\x25\x9b\xb8\xa7\xf1\x5e\xc0\xb5\x34\x78\xd6\x9c\x8d\xd2\xa5\x82\x3b\x99\x21\x3c\xd3\x9e\x05\x88\xe9\xeb\x67\x97\x5c\xb3\x41\xce\xf0\x75\x67\x29\x23\x82\xb1\xac\xe0\x86\x9c\x94\xf6\x4c\xb2\xc3\xe1\x12\x5d\x97\x61\x0f\x67\x5c\x54\x25\x68\x23\x4b\xa8\xab\x02\x6f\xb6\xa8\x31\x40\xad\x77\x4a\xba\x5d\x55\x2e\xc9\x7c\xd0\x47\x7c\x16\xd6\x76\x7f\x17\x7d\xb0\x42\x50\x58\xa3\x3b\x52\xdc\xd5\x2a\x72\x1e\x61\x1b\x5f\x08\xa8\xfb\x84\x24\x97\x2e\x42\xc9\x3a\x3d\x6c\x97\xe0\xa2\x30\x23\xdb\x36\xdf\x1f\x45\x40\xbd\x3f\xfa\xbc\x3a\xe1\x70\x08\xe3\x8d\x06\x98\xc3\x4e\xd5\xbc\x62\xbd\x4e\xd3\xf1\x42\x3d\x77\xb0\x43\x5d\x94\xd7\xc3\xec\xe1\x45\x7a\xa1\x28\xaf\x07\xf2\xb1\x48\xef\xb1\x48\xef\xb1\x48\xaf\xfb\x7b\x2c\xd2\xf3\xbf\xc7\x22\xbd\xa1\xdf\x63\x91\xde\x21\x90\xc7\x22\xbd\xc7\x22\x3d\x77\x82\xd3\x12\xd3\x4a\x71\xb3\x7f\xab\xe4\x9a\xe7\x13\x67\x6a\xf5\xdb\xd7\x2b\x2b\x76\x6f\x22\x39\x2f\x6e\xbb\xed\xcd\xeb\x65\xfb\xc0\xc2\x68\x26\x22\x72\xdc\xe8\xbc\xf3\x2b\xe8\x39\x2b\xb9\x3b\x8a\xe8\x7e\x5b\x0a\xc3\xf1\x71\x49\x88\x45\x9c\xcd\xb9\x6b\x0e\x8d\x21\xe0\x6f\xf2\xec\xd8\x85\xa3\x3e\x71\xe9\xa6\xfe\x17\x99\xa1\xea\x07\x09\xa5\x27\x85\x0d\x7d\x1c\xd6\x2e\x51\xcc\x77\x58\xbf\xec\x2c\x56\xda\xad\x9c\x95\x3b\xaf\x8e\x22\x7a\xbb\xff\xa6\xef\x40\xa2\xb9\x43\x14\x64\x57\x90\x69\xd2\xa3\x3f\xb6\x53\x4c\x1b\xbe\x43\x41\xfa\xa5\x73\x22\x9b\xdb\x13\xec\x4f\x5f\x6b\x06\x30\x88\x74\xd8\x3b\x48\x74\xf5\x1d\xc1\xff\x4d\xfe\x96\xfc\x9d\x86\x0c\x55\xb9\x51\x2c\x43\x77\x22\x66\xeb\xe5\xff\x3a\x85\x22\xa2\x85\x7c\xe0\x65\x93\x65\xf1\x81\xbb\x68\xa7\xb5\xb0\x1c\x77\x91\xfb\x59\x50\x85\xba\xca\xad\x73\xcc\x69\xd0\xd4\x2c\x9c\x64\xd9\x4c\xa3\x55\x1e\x5c\xf0\xa2\x2a\x2c\x07\xfa\xa3\x1b\xdb\xdc\xd6\xc7\xb9\x61\x3f\x9a\x96\xd3\xe4\xb4\x91\xf3\x82\x7d\xec\xc1\xb2\x6d\x5e\x24\x00\xe7\xc2\x3a\xed\x9e\xf0\x3d\xb8\xcd\x29\x91\xda\x66\x2b\xfc\xb7\x35\x9e\x8e\x99\x2c\xe8\x36\x03\x35\x07\x75\xf4\x20\xda\x50\x64\x85\x8e\xc8\xdc\x04\xed\xa2\x2d\x8c\xd3\xe4\xe5\xe7\xf2\xfa\x53\x7b\x96\xf0\x74\xfa\xc4\xb5\x73\xca\xdf\x9e\x3b\x16\xb6\xfa\x12\x3e\xda\xeb\x89\x30\xb8\x04\x7e\x88\xeb\x7f\xfc\x68\x48\x43\xe6\x7b\x48\x99\xb2\xe1\x50\xd8\x19\xe8\xe1\x07\xea\x30\x0d\x5c\xb8\x93\x98\x3a\x3c\x35\x50\x94\xc0\x04\x71\x5a\xca\x0c\xd3\x46\xc9\x72\xcb\xd3\x84\xa6\xcc\x8b\xcf\x21\xf0\x5c\xca\x5b\x0d\x39\xbf\x75\x07\x4b\x0e\xa6\x02\x01\x52\x5e\x6e\x51\x69\x77\xdc\xcd\x02\xae\x2e\x2e\x7f\xbe\x5a\x5c\x5d\x5c\x2e\xcf\x17\x17\x3f\x9f\x5f\xfc\x7c\xfe\xe2\xeb\xc5\xdb\x37\xaf\xff\x76\xfa\xf2\xeb\x6f\x3b\x6d\xde\xc5\x5a\xc4\xfb\x39\xfc\xec\xfc\x6a\x79\xfa\xe2\xfb\xc5\x4f\x17\xbf\x2c\x96\x3f\x9f\xbf\xf8\xf6\xbb\x48\xe7\xbd\x36\x43\xa0\x0b\x2e\x6e\x5e\x2f\xeb\xc3\xa5\x6f\x5e\x2f\x77\xa7\xc9\xe9\x17\x28\x93\x0d\x94\x1a\xf0\x46\x0e\x98\xc9\x35\x6e\x87\xdc\xad\xc3\x11\x3d\x2c\x60\xf9\x46\x2a\x6e\xb6\x03\xd9\x5f\x8b\x34\x09\x18\xd9\x55\x81\x1b\x69\xb8\x3b\xfc\xcb\xf9\x62\x04\x88\x78\x73\xcb\x44\xa6\xb7\xec\x16\x13\xa8\x97\x76\x75\x54\xa1\x85\x9f\xc2\x42\xee\x10\x50\x18\xc5\x5d\xa0\xc6\x95\xf3\x19\x44\xa6\x21\x73\x59\x61\x9f\x77\x49\xa0\xa3\xa7\x87\x11\x75\x9a\xfa\xf2\x6a\xb9\xb8\xf8\xe1\xe2\x25\xcd\x1a\xc0\xb3\x3d\x2b\xf2\xe7\x67\x51\x56\x6b\xb7\x8c\x4d\x17\x7c\x8e\x02\xdf\xe9\xd2\xb3\x0e\xfb\xcc\x9a\xdb\xce\x27\x43\x33\x6c\xf5\x36\xcb\x83\x9e\x1d\x44\xd0\x27\xb5\xbd\xde\x34\x32\x95\xb9\x9b\x73\xae\x67\x4d\xf9\x20\xe0\x1f\x0f\xd6\x6f\x68\x72\x5a\x8a\xdf\x9b\x86\xd3\xe4\x85\x35\x0f\xa7\xc9\xcb\x30\x59\x83\x10\xed\x24\xc6\xc5\xcd\xda\xad\x37\x37\x57\x67\xad\x63\x08\x08\xd7\x2d\xdf\x6c\x0f\x8f\xfe\x1d\xa4\x7e\x5d\xcb\xc2\x35\xf8\x47\x37\xaf\x97\xa7\x2f\xc6\x99\xe3\x13\x0e\xaa\x69\x75\xf2\xf5\x9c\x46\xa7\x73\x1a\xbd\x98\xd3\xe8\x65\xa4\x91\xa8\x72\x7b\x3c\xfa\x19\x18\x55\x45\x8e\x02\x6d\xb9\x3f\xd3\xc6\xac\xdd\xda\x99\xb4\x98\x15\xab\x7d\xd0\xb3\xa1\x15\x93\x90\x35\xbf\xe3\xb7\x3c\x29\xe4\xef\x3c\xcf\x59\x22\xd5\xe6\x24\x38\xce\x27\xee\x50\xe2\x0f\x4b\x9e\xe1\x87\x9b\xd7\xcb\xaf\xda\x6e\xda\x87\x54\x16\x25\x33\x7c\xc5\x73\x6e\xf6\x1f\x92\x17\xdf\x2b\x4c\x65\x51\xa0\xc8\x30\x4b\x5e\xfc\xef\x21\xb3\x44\x1c\x79\x60\xc2\x46\x55\xc9\xcd\xeb\xe5\x87\xf3\xab\xe5\x87\xd3\x17\xdf\x7f\xf8\xe9\xe2\x97\x0f\xe3\x16\xa3\xfd\xc5\x8b\x6f\xbf\x0b\x5f\xbc\xfc\xfe\x9b\x16\xb8\x60\xda\x3e\x04\xd3\x36\x03\xe8\xa8\xfd\x02\x98\xb2\x82\xf7\x00\xfd\xe2\xdb\xef\xc2\x87\x0d\xda\x1d\xd0\xdd\x16\x73\x41\x7f\x66\x93\x3f\x65\xf0\xef\x8d\x6f\x54\xfb\x44\x15\xc4\x84\xb1\x9f\x10\xb6\xc2\x7a\xb3\xd3\x62\xe6\xda\xcd\x14\xb0\x07\x08\x93\xf3\xaa\xbb\x62\xf4\x5f\x24\x34\xd1\xe9\x7c\xd9\x18\x93\x8b\xda\x98\x54\xa2\x3e\xd5\xe6\x21\x5b\xa0\x26\xa6\x5b\xe6\xd1\xdc\x72\x77\xae\x65\x9e\x7d\xb9\x89\x7e\x93\x67\x1f\x56\x2c\xbd\xbd\x63\x2a\xfb\xaf\x9d\xee\x47\x1d\x19\x01\xfd\xd9\x75\x64\xfb\xa3\x71\x5c\x3b\xb3\x30\x97\xbe\xef\x0e\x3f\x19\x05\xe9\x5e\x46\xa1\xc6\xc0\xc5\x61\xd1\xb8\xc7\x67\xf1\x7e\x33\xd8\x7c\x34\x02\x6f\x04\xf3\x31\x32\xf4\x01\x35\xef\xee\xc5\xcd\x43\x1c\x1c\xeb\xb4\xd3\xd9\x04\xd0\x2e\xa5\x7b\xa4\xe8\xc6\x6f\x73\xc2\x23\xa7\xb5\xbf\xfe\xfc\x5a\xf9\x7e\xa7\x0a\xba\xa2\xa7\x58\xae\xd3\xa7\xa6\xa4\xf2\xd7\x4a\xc5\x63\xa6\x8b\x3a\x83\xb2\xe3\x99\x5f\xbd\x64\x4e\x05\xb7\x63\xbb\xe6\x34\xeb\x8e\x1d\x18\x5a\x60\xb4\xb6\xa1\x39\xbb\x31\xe9\xe3\xd7\x4a\xc5\xda\x38\x7f\x2e\x54\xfd\xa9\x26\xe7\x5d\xe3\x8a\x7f\x98\x91\x81\xf2\xdb\x5f\xea\xde\x99\x3d\xae\xde\xa0\x30\x0e\x11\x5f\x86\x8d\x7b\x7b\x3d\x89\xcb\x01\xfb\x4d\xee\x43\x65\xca\x4c\xdb\xd4\x6a\xc8\x95\xd8\x93\xa3\x70\x87\xb9\x2c\x7d\x71\x07\x7e\xe4\xda\x26\x49\xdb\x4d\xd6\xb2\x12\x83\xe7\x01\xae\x08\x29\x4b\x3e\x4c\x00\x2e\xb1\x44\x61\xcf\x1e\x96\x02\x4a\x85\x29\xd7\x98\xef\x7d\x81\x71\x1b\x66\x7d\x37\x55\x7c\xc1\x41\x02\xa3\x81\xa7\xa8\x7d\x42\xdc\x96\x00\x84\x8b\x88\x30\xab\x52\x5f\x87\xd7\xcd\xdd\x0e\x24\xd8\xdb\xac\xd1\x39\xb8\xaf\x95\x75\xe9\xa6\x46\x7d\x75\xf4\x1e\x0d\xdc\x61\x1e\x3f\x58\x95\x65\xb2\xf4\xf5\x36\x34\xaf\x52\x80\x96\x6b\x73\x47\xa3\xcb\xf9\x4a\x31\xc5\xb1\x5f\x10\x09\x9f\x52\xcc\xf2\x26\x8f\xd7\xaf\x8c\x26\xea\xa9\xc1\x20\x5d\x16\x5e\x0a\xeb\x57\xfe\x76\xb0\x56\xd3\xee\x41\xba\xf6\x75\x58\x78\x2f\xa4\xb6\xb7\x10\x39\x62\xca\x95\xbf\xd1\xc4\x37\xfa\x02\x77\xb8\xf4\x6e\x34\x1b\x5d\x6e\xea\xb5\xb6\xd3\x5a\x17\x1d\xd7\xf8\xd6\xed\xe0\xe0\x72\xb5\x56\xc7\x69\x2a\x95\xe5\xeb\xc1\x25\x87\xf6\x59\x6d\xd1\x3c\xfa\x7d\x4b\x91\x53\x29\xdc\x02\xdd\xf8\x28\x8f\x9a\x76\xdd\x6a\x99\xd6\x73\xbf\x1e\xc1\x95\x9f\x9b\x68\xbd\xe6\x79\x4d\x06\xbf\x13\x60\xf2\xa8\x41\xea\xae\xfe\x28\x56\x5c\xe0\x6a\x9b\x88\x6c\xaa\xbe\xbc\x2d\x80\xac\x6f\x7f\x82\x67\x3c\xc1\xe3\x89\x5b\xeb\xda\x3f\xfc\xad\x62\xb9\x3e\xb8\x0f\xef\xb9\xd7\x97\xa4\x5b\xe8\xbf\x7a\x71\xb3\x4d\x07\xa7\x87\xc2\xae\xb1\xbe\xfd\xdb\x62\x8b\x79\xdd\x69\xeb\xb1\x6b\xec\xfc\xd5\x16\x76\x38\x29\x2b\x9d\xd1\xe2\xb1\x6a\x1b\x1b\x17\x74\x4f\xcd\xfd\xc5\x1f\x83\x67\x7d\x7a\x55\xa1\x3d\x0e\xb8\x73\xc1\x4e\x7b\xe2\x54\x24\x54\x46\xe3\x42\x0c\x77\x07\xc4\xd8\x6d\x19\xcd\x12\x0f\xab\x2f\xd4\xcb\x25\x8b\xd4\x9a\x85\xc3\xc1\x2d\x5a\x3f\xb2\x5c\x5b\xbc\x98\xd8\x3b\x31\x96\x1a\x0f\xd0\xa2\x00\x91\x19\xae\xd7\x7c\xe0\x32\xa1\xf7\x87\x03\x7f\x87\x2c\xdb\xcf\x1e\xb6\x1d\x66\x0c\x28\x81\x3d\x3f\xbc\xd8\x40\x87\xd3\x05\x93\x16\x65\x7a\x6d\x14\x61\x10\x99\xa4\x87\x8e\xd9\xf6\x74\x79\xbd\xf4\x53\x1a\x07\x3c\x7b\xb0\x91\x39\xed\xaf\xba\x46\xe6\x98\xb8\xb0\xbe\x08\x2f\x1c\xe2\x78\x79\xbd\x6c\x93\x62\xc6\x89\xcc\x9d\x43\x82\xc3\xb7\x13\x27\xee\x36\x17\xaf\xe8\xe8\xcd\x20\xf6\x04\xdf\x87\xf3\x14\xa1\xd0\x83\x79\x79\xbd\x7c\x00\x27\xf9\xf1\x5c\x5e\x2f\x63\x15\x1a\x07\xcc\xd3\x3a\xb0\x18\xb6\x6c\x87\xb0\x42\x14\xa0\xab\x94\xfc\x91\x75\x95\xe7\xfb\x70\x86\x67\x6b\x6c\xfd\xfc\xf1\xfc\xb1\xc6\x17\x5e\x63\xab\x30\x03\xab\x2f\xd1\xdd\x86\x17\xa1\x43\x9a\x54\xbb\xe3\xc7\x2b\x38\x91\xd9\xbb\xb3\xea\xd7\xfe\x12\xa2\x78\x3c\x30\x7c\xaa\xfa\xd8\xea\x5d\xce\xb4\xb9\x51\x4c\x68\x1e\x2e\x8c\xbd\x67\x69\x49\xf8\x05\xfb\x98\x31\x83\x8b\x01\xc7\xb6\x40\xad\xd9\xe6\x61\x3d\x28\x64\x7a\x28\xd0\x9a\xf8\xb4\xef\x2b\xcd\xfe\x74\x28\xd2\xfa\xb4\xeb\x9d\x1a\x11\xb6\xb1\x54\x6a\x28\x68\x0a\x0f\x85\x3d\xeb\x3d\xca\x68\x9f\xef\xa6\x9b\xf1\x8b\x6e\x5a\x58\xd5\xda\x6b\x0c\xaf\xc7\xbb\x44\x1e\xef\x12\xe9\xfd\x1e\xef\x12\x79\xbc\x4b\xa4\xf3\x7b\xbc\x4b\xe4\xf1\x2e\x91\xc7\xbb\x44\x1e\xef\x12\x09\xdc\xf5\x78\x97\x48\x98\xae\xc7\xbb\x44\x1e\xef\x12\x79\xbc\x4b\xe4\xf1\x2e\x91\xc7\xbb\x44\xfe\x6b\xef\x12\x09\x8b\x18\x3f\xb9\x8b\x8a\xa7\xce\x2c\xe9\x37\x8f\xac\xe5\x84\x5b\x8f\xed\x05\xfd\xfe\x83\x07\x2e\x69\x1c\x1c\xaa\xa3\xe7\xec\xa1\x6e\x1f\xcd\xcc\x0e\x36\xd3\x1e\x93\x3d\xf7\x9b\x03\x5d\x37\xc7\x33\x37\x67\x40\x29\x33\x12\x2d\xe5\x14\x7e\x7b\x2d\xa7\xbf\x42\x65\xe5\xc3\xad\x14\xf5\x40\x86\xcd\x61\x04\xc0\xc2\xf4\xc7\x36\xd8\x55\x89\xd6\xb9\x3c\x72\xdd\x5f\x80\x9a\x9d\x7e\x31\xb9\x9e\xb3\xa1\xaa\x69\x16\xa6\xb1\xbb\x6f\xea\x70\xf3\x8c\x2b\x73\xee\x67\x2a\x85\xdf\x70\x74\x8f\x34\xcc\xe8\x06\x90\xe1\xc2\xfd\x4f\x2b\xda\x1f\x3e\x75\xec\x81\x05\xfb\xbe\x30\x3f\x0a\xf2\x21\xc5\xfa\xb1\xa2\xfc\xb8\x55\xfa\xa4\x4a\xfd\x07\xef\x54\x1f\xdf\xbd\x39\x55\x7a\xf2\x85\xaa\xf2\xbf\x48\x45\xfe\x83\xab\xf1\x63\x55\xf7\xd1\x1e\xe6\x55\xe2\x0f\x56\xdc\x47\x61\x4e\x55\xe1\x3f\xd8\x4e\x4d\x54\xde\x4f\x56\xdd\x4f\x56\xdc\xf7\xaa\xed\x77\xa1\xc8\x74\x77\xda\xfc\x65\xd9\x72\x61\x63\x39\xff\xc2\x2d\x12\x63\xd6\x2a\x49\xd2\x46\x2a\xb6\x09\x45\x4a\x4d\x96\x9d\xa5\x14\xc6\x62\x66\x8f\xf8\x71\xc3\xbc\xe5\x22\x3b\x83\x23\x47\xaa\x32\xaf\x14\xcb\xfd\x9f\xad\xd5\x73\xf8\xc7\x3f\x9f\x38\xa8\x98\xfd\x1a\xf0\xa0\x87\xff\x2f\x00\x00\xff\xff\xcf\xe3\xd6\xf0\x24\x8f\x00\x00")

func manifests00CustomResourceDefinitionYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionYaml,
		"manifests/00-custom-resource-definition.yaml",
	)
}

func manifests00CustomResourceDefinitionYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition.yaml", size: 36644, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x60, 0xe7, 0xb0, 0x89, 0xb4, 0x80, 0xfb, 0xc6, 0xdd, 0xb8, 0xce, 0xdf, 0xc6, 0x4c, 0x3, 0x50, 0xa4, 0xdd, 0x54, 0x74, 0x8f, 0xe6, 0x58, 0xa7, 0x8b, 0x8a, 0x1b, 0xb9, 0x1b, 0x39, 0x23, 0x36}}
	return a, nil
}

var _manifests00IngressCredentialsRequestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x52\xc1\x6e\x1b\x3b\x0c\xbc\xef\x57\x10\x3e\x3e\x40\x9b\x17\x14\x05\x0a\xdd\x12\xb7\x48\x0f\x39\x04\x36\xd0\x02\xbd\xd1\xd2\x78\x23\x44\x16\xb7\x22\x37\x05\xfa\xf5\x85\xec\xed\xba\xa9\x4f\xbd\x05\xb9\xad\x38\x24\x67\x76\x38\x3c\xa6\x2f\xa8\x9a\xa4\x78\x0a\x59\xa6\x18\x2a\x22\x8a\x25\xce\xbd\x8c\x28\xfa\x98\xf6\xd6\x27\xb9\x7a\xbe\xee\x9e\x52\x89\x9e\xd6\x4b\x83\x6e\xf0\x7d\x82\x5a\x77\x80\x71\x64\x63\xdf\x11\x65\xde\x21\x6b\xfb\x22\x0a\x52\xac\x4a\xce\xa8\xce\x44\xb2\xf6\x4f\x1f\xb4\x4f\xe2\x69\x75\xdd\xff\xbf\xea\x88\x0a\x1f\xe0\x69\xe1\x71\xa9\x0c\x15\xaa\x33\xa2\x23\x87\x17\xf0\x51\xa0\x3b\x2b\x74\x32\xa2\xb2\x49\xed\x74\x44\x68\x9c\x8a\x50\x61\x1b\xec\x4f\x02\x4e\xfb\xff\x1e\xd3\x05\xbb\x60\x98\x05\x9c\x17\x13\x8d\x55\x9e\x53\x44\xdd\xce\x14\x44\xff\xe2\x59\xeb\x3f\xf9\x76\xf3\x75\xfb\xf0\xc7\xaa\x23\xa2\xc6\x86\x03\x8a\x7d\x2a\x56\x13\x66\xdb\x1c\x61\xbf\x47\x30\x4f\x37\x39\xcb\x8f\x63\x8d\x88\x83\x35\xc6\xf9\xe5\x08\x99\xd5\x52\xc8\xc2\x71\xc7\x99\x4b\x48\x65\xf0\x1f\xa1\xa1\xa6\x1d\xee\x85\xe3\xed\xb1\x8a\xaa\xcb\x48\x95\xc9\xf0\xfe\x9d\xbf\x4f\x6a\x9f\x45\x0d\xf1\x9b\x14\x5c\xe2\xeb\x47\x2e\x03\x36\x50\x99\x6a\xc0\x06\x41\x6a\xdc\xc2\xce\x8d\xc6\x83\xbf\x6b\x3e\x9f\x3a\x7e\x03\x75\x7e\x7b\x5a\xfd\xb7\xea\x9c\x73\xdd\xab\x8c\x97\xe3\x9f\x53\xc5\xdb\x0c\x59\xfb\xb3\x8b\x98\x55\xc9\xb8\x4d\x25\xa6\x32\x2c\x11\x6b\x35\x4f\xeb\x66\x61\xda\x4d\x4d\xc5\xeb\xbd\xd7\x10\xc6\x37\x79\xad\xbb\xf5\xc3\xc5\xad\xc6\x36\xb8\x4f\x05\x71\x23\x19\x2f\xce\xa5\x57\xb1\x68\xcf\xf1\x90\x4a\xf7\x2b\x00\x00\xff\xff\x8f\x64\x7a\x7c\xb8\x05\x00\x00")

func manifests00IngressCredentialsRequestYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00IngressCredentialsRequestYaml,
		"manifests/00-ingress-credentials-request.yaml",
	)
}

func manifests00IngressCredentialsRequestYaml() (*asset, error) {
	bytes, err := manifests00IngressCredentialsRequestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-ingress-credentials-request.yaml", size: 1464, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc8, 0x2c, 0xb5, 0xfb, 0x97, 0x77, 0x7d, 0xd7, 0x6d, 0x81, 0x2f, 0x39, 0x37, 0xcd, 0x2b, 0x82, 0x89, 0xac, 0x43, 0x14, 0x12, 0x84, 0x8, 0xf9, 0x32, 0x7f, 0xa9, 0x86, 0xe7, 0x98, 0x8d, 0x15}}
	return a, nil
}

var _manifests00NamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x4e\xc4\x40\x0c\x44\xfb\xfd\x8a\x51\xa8\x03\xa2\xdd\x7f\x80\x06\x89\xde\xb7\xf1\xdd\x99\xdb\xd8\x2b\xdb\x17\x7e\x1f\x45\x20\x88\x44\x69\x79\xde\xcc\xbb\x89\x2e\x15\xaf\xb4\x72\x0c\x6a\x5c\x68\xc8\x3b\x7b\x88\x69\xc5\xf6\x5c\x56\x4e\x5a\x28\xa9\x16\x80\x54\x2d\x29\xc5\x34\xf6\x13\xb0\xc1\x1a\x57\x39\xe7\xa3\xd8\x93\xda\xc2\x73\x70\xe7\x96\xe6\x15\xd3\x54\x80\x4e\x27\xee\x3f\xe1\x07\x50\xef\xf6\xf9\x07\xcd\xab\xa9\xa4\xb9\xe8\x05\x69\xe8\x66\x37\x9c\xcd\xf1\xc6\xbe\x49\xe3\x97\xef\x2f\xec\xf4\xc1\x2d\x03\xa2\xc8\xab\x04\xf4\x57\xf5\x9f\x42\xeb\xf7\x48\xf6\x43\x71\xc5\x94\x7e\xe7\xdd\x65\xe7\xea\x61\x5d\xf4\xe2\x1c\x31\xdb\x60\xa7\x34\x2f\x5f\x01\x00\x00\xff\xff\xf3\x40\x5a\x74\x0a\x01\x00\x00")

func manifests00NamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00NamespaceYaml,
		"manifests/00-namespace.yaml",
	)
}

func manifests00NamespaceYaml() (*asset, error) {
	bytes, err := manifests00NamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-namespace.yaml", size: 266, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc5, 0x8c, 0x18, 0x1c, 0xe2, 0xe5, 0x97, 0x66, 0x8, 0xfe, 0x5b, 0x6, 0x60, 0x9d, 0x8f, 0xac, 0x16, 0x66, 0x66, 0x65, 0x25, 0xb3, 0x8f, 0xef, 0x71, 0x1d, 0x82, 0x2c, 0x1f, 0xa4, 0xd, 0x83}}
	return a, nil
}

var _manifests0000_90_ingressOperator_00_prometheusroleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8c\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\xc8\x2e\x17\xdd\x02\x5d\xa0\x7b\x87\xee\x8c\xfc\x1b\x13\xb6\x45\x81\xa4\x5c\xa0\xa7\x0f\x92\x78\xe2\x7b\x0f\xc4\xe7\x2e\x3f\x30\x17\x6d\x85\xec\xc6\x75\xe2\x11\x8b\x9a\xfc\x73\x88\xb6\x69\xbd\xfa\x24\xfa\x71\x7c\xa6\x55\xda\x5c\xe8\x5b\x37\xa4\x1d\xc1\x33\x07\x97\x44\xd4\x78\x47\xa1\x6e\xba\x23\x16\x0c\xcf\xeb\xd5\xcf\xec\x9d\x2b\x0a\x69\x47\xf3\x45\x7e\x23\x4b\xbb\x1b\xdc\xb3\x76\x18\x87\x5a\xb2\xb1\xc1\x4b\xca\xc4\x5d\xbe\x4c\x47\xf7\xe7\x64\xa6\xcb\x25\x11\x19\x5c\x87\x55\x9c\xcd\x61\x87\x54\xf8\x4b\xd0\xe6\xae\xd2\xe2\x6d\x5d\xe7\x27\x1c\xb0\xdb\xf9\x7c\x47\xbc\xee\x26\xfe\x86\x3f\x8e\xba\xa4\x47\x00\x00\x00\xff\xff\xca\x87\x68\x45\xed\x00\x00\x00")

func manifests0000_90_ingressOperator_00_prometheusroleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_00_prometheusroleYaml,
		"manifests/0000_90_ingress-operator_00_prometheusrole.yaml",
	)
}

func manifests0000_90_ingressOperator_00_prometheusroleYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_00_prometheusroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_00_prometheusrole.yaml", size: 237, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5e, 0xfa, 0xc5, 0xb2, 0xce, 0xdd, 0xc0, 0x21, 0x49, 0xc0, 0x28, 0xa6, 0x7d, 0x8c, 0x46, 0xd4, 0xf3, 0x9d, 0x8, 0xb3, 0x2c, 0x8c, 0xac, 0x17, 0x87, 0xc8, 0x6c, 0x6a, 0x69, 0x5d, 0xef, 0x90}}
	return a, nil
}

var _manifests0000_90_ingressOperator_01_prometheusrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xb1\x4e\xc4\x30\x0c\x06\xe0\x3d\x4f\xe1\x17\x48\x11\xdb\x29\x1b\x2c\xec\x87\xc4\xee\x4b\x7d\x57\xd3\xc6\x8e\x6c\xa7\x03\x4f\x8f\x2a\x55\x62\x02\x89\xd5\xb2\xfe\xff\xfb\xb1\xf3\x07\x99\xb3\x4a\x01\xbb\x61\x9d\x70\xc4\xa2\xc6\x5f\x18\xac\x32\xad\x17\x9f\x58\x9f\xf6\xe7\xb4\xb2\xcc\x05\xae\xba\xd1\x2b\xcb\xcc\xf2\x48\x8d\x02\x67\x0c\x2c\x09\x40\xb0\x51\x81\x6e\xda\x28\x16\x1a\x9e\xd7\x8b\x9f\x67\xef\x58\xa9\x80\x76\x12\x5f\xf8\x1e\x99\xe5\x61\xe4\x9e\xb5\x93\x61\xa8\x25\xd3\x8d\xae\x74\x3f\x72\xb0\xf3\x9b\xe9\xe8\x7f\x60\x12\xc0\x8f\xe5\xb7\x6a\x1f\xb7\x4f\xaa\xe1\x25\xe5\xf3\xfb\x9d\x6c\xe7\x4a\x2f\xb5\xea\x90\xf8\x27\xb9\xa9\x70\xa8\x1d\xab\xbf\x03\x00\x00\xff\xff\x37\x75\xb6\xb0\x31\x01\x00\x00")

func manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,
		"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml",
	)
}

func manifests0000_90_ingressOperator_01_prometheusrolebindingYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml", size: 305, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x62, 0xb9, 0xd5, 0x57, 0xe3, 0x88, 0x98, 0x3e, 0x29, 0xea, 0xbf, 0x8c, 0x99, 0x2e, 0x96, 0xf8, 0xdf, 0xc2, 0x96, 0xd, 0xc7, 0x9e, 0xa3, 0x8b, 0x90, 0x2b, 0x7a, 0xa1, 0x1f, 0xfc, 0x4f, 0x3f}}
	return a, nil
}

var _manifests0000_90_ingressOperator_02_servicemonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xb1\xae\xd5\x30\x0c\x86\xf7\x3e\x85\x5f\xa0\x0d\x88\x2d\x2b\x12\x13\xb0\x80\xd8\x53\x9f\xff\xb6\xe1\x34\x76\x64\xbb\x7d\x7e\xd4\xf6\xdc\x09\xdd\xd1\x7f\xbe\xfc\xfa\xe2\x94\x5e\xff\xc0\xbc\xaa\x64\x6a\x2a\x35\xd4\xaa\x2c\x13\xab\x41\x7d\x62\x6d\xe9\xf8\x3c\x3c\xab\x3c\x32\xfd\x82\x1d\x95\xf1\xe3\xa6\x86\x86\x28\x8f\x12\x25\x0f\x44\x52\x1a\x32\x55\x59\x0c\xee\xa3\x76\x58\x39\x91\xfb\xc0\x7b\x61\x64\xd2\x0e\xf1\xb5\xbe\xc5\xf8\x1f\xe7\x1d\x7c\xd6\x40\x1e\x5d\xab\x84\x9f\xc3\x48\x33\x8a\xc1\x7e\xeb\x13\xf2\xad\x6e\xc8\x94\x8e\x62\xc9\x76\x49\x0e\x36\x84\xa7\xe7\x3e\xc3\x04\x01\x9f\xaa\x26\xbf\x05\x0b\xb3\xee\x12\x29\xce\x8b\x03\x11\x51\x95\x80\x1d\x65\xcb\xf4\xe5\x93\x5f\x49\x57\x8b\x4c\x0d\x61\x95\xef\xc4\x79\xc5\xf9\x88\x35\xa2\xdf\x49\x6c\xfe\x55\xe5\xad\x2e\xf9\x1a\x89\xb8\xbc\x34\x10\x9c\xba\x69\x43\xac\xd8\x3d\xf1\x45\xb5\xd2\xfd\x56\x90\x65\x64\x58\xf8\xc8\x65\x9c\x77\x79\x6c\x78\x57\x1b\xb9\x4c\x6c\xf1\xea\x3b\x43\xd8\xcf\x6b\x77\x2f\x95\xe9\xe3\x2d\x4d\x7e\xf0\x40\xf4\x57\xe7\xef\x65\xc6\x96\x89\xb5\x75\x15\xc8\x59\xe7\xd8\xc0\xa1\x76\xab\xb6\x12\xbc\x5e\x94\xbf\xbb\x7f\xf0\x43\xff\x02\x00\x00\xff\xff\xf3\xaa\xe4\xf4\xff\x01\x00\x00")

func manifests0000_90_ingressOperator_02_servicemonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_02_servicemonitorYaml,
		"manifests/0000_90_ingress-operator_02_servicemonitor.yaml",
	)
}

func manifests0000_90_ingressOperator_02_servicemonitorYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_02_servicemonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_02_servicemonitor.yaml", size: 511, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2b, 0xe6, 0x77, 0x40, 0x4f, 0x55, 0xae, 0x76, 0xce, 0xd1, 0x27, 0xf5, 0x2e, 0xec, 0x50, 0xfd, 0xf9, 0xf5, 0x2, 0xcd, 0x27, 0xfc, 0x51, 0x80, 0xdf, 0x29, 0x71, 0xe1, 0xca, 0xa7, 0x73, 0x22}}
	return a, nil
}

var _manifests01ClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x4f\x03\x31\x0c\x85\xf7\xfc\x0a\x4b\xcc\x17\xc4\x86\xb2\x01\x03\x7b\x91\xd8\xdd\x9c\xdb\x33\xbd\xda\x91\xed\x74\xe0\xd7\xa3\xe8\x0a\x4b\xa5\x8a\xd9\x7e\xef\x7d\xdf\x03\xbc\xb2\xcc\x0e\xb1\x10\x68\x23\xc3\x50\x83\xba\x76\x0f\x32\x30\x5d\x09\x42\x81\xc3\xe1\x83\xec\xc2\x95\xe0\xa5\x56\xed\x12\x39\x9d\x58\xe6\x02\x6f\xdb\xeb\x4e\x57\x1a\x45\x2c\xc7\x84\x8d\x3f\xc9\x9c\x55\x0a\xd8\x1e\x6b\xc6\x1e\x8b\x1a\x7f\x63\xb0\x4a\x3e\x3d\x7b\x66\x7d\xbc\x3c\xa5\x33\x05\xce\x18\x58\x12\x80\xe0\x99\xca\x20\x10\x5f\xf8\x10\x13\xcb\xd1\xc8\x7d\xfa\x65\x4a\xde\xf7\x5f\x54\xc3\x4b\x9a\x60\x9b\xbe\x12\x5d\x81\xfe\x3a\x6e\x92\xdb\xc1\x1b\xd6\xfb\x0b\xc3\x76\x47\x87\x41\x73\xe3\x96\x00\xb0\xf1\xbb\x69\x6f\x77\xa4\xfe\xe3\xf1\x13\x00\x00\xff\xff\x5e\x3a\x23\xb1\x71\x01\x00\x00")

func manifests01ClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ClusterRoleBindingYaml,
		"manifests/01-cluster-role-binding.yaml",
	)
}

func manifests01ClusterRoleBindingYaml() (*asset, error) {
	bytes, err := manifests01ClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-cluster-role-binding.yaml", size: 369, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xda, 0x8e, 0x10, 0x4b, 0xec, 0x40, 0x80, 0x5c, 0x10, 0x83, 0xa9, 0x57, 0x2, 0x49, 0x9d, 0x4e, 0x4d, 0x6a, 0xec, 0xaf, 0x5d, 0x81, 0xa3, 0x2f, 0x1e, 0xd3, 0x8b, 0x69, 0xa0, 0x39, 0x50, 0xdf}}
	return a, nil
}

var _manifests01RoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xd0\x31\x4f\xc3\x40\x0c\x05\xe0\xfd\x7e\xc5\x93\x98\x13\xc4\x86\x6e\x83\x85\xbd\x48\xec\xee\xc5\x6d\x4c\x5b\xfb\x64\x3b\x1d\xf8\xf5\x28\x22\x88\x01\xc1\xd2\xd9\xb6\xde\xf7\x7c\x87\x67\xd1\x29\x90\x33\xc3\x3a\x3b\xa5\x39\xdc\xce\x8c\x34\x48\x06\x5e\xd9\xaf\xd2\x18\x4f\xad\xd9\xa2\x39\x96\x93\xe8\x54\xb1\xb3\x33\xaf\x97\xa2\xc7\x42\x5d\xde\xd8\x43\x4c\x2b\x7c\x4f\x6d\xa4\x25\x67\x73\xf9\xa0\x14\xd3\xf1\xf4\x18\xa3\xd8\xfd\xf5\xa1\x5c\x38\x69\xa2\xa4\x5a\x00\xa5\x0b\x57\x88\x1e\x9d\x23\x86\xef\xe8\x6d\x10\x9d\x1a\xd7\x15\xa4\x31\xcb\x21\x87\x5f\x7b\xb1\xec\xdf\xb9\x65\xd4\x32\xe0\x4b\xb4\x41\x37\xe7\xed\x09\xeb\x13\x76\x7c\x58\xad\x3f\x95\x0b\x40\x5d\x5e\xdc\x96\xfe\x4f\xd7\xbf\xc3\x3f\x03\x00\x00\xff\xff\x1f\x8f\x27\xc8\x6f\x01\x00\x00")

func manifests01RoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleBindingYaml,
		"manifests/01-role-binding.yaml",
	)
}

func manifests01RoleBindingYaml() (*asset, error) {
	bytes, err := manifests01RoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role-binding.yaml", size: 367, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xce, 0x6b, 0xe2, 0x98, 0x77, 0x85, 0x4, 0x5f, 0x81, 0xee, 0xa8, 0x60, 0xbe, 0x8a, 0xf3, 0x3, 0xad, 0xd8, 0x7, 0x27, 0x33, 0x11, 0xe8, 0x28, 0x66, 0xe4, 0xd9, 0x9, 0x76, 0xee, 0x60, 0xb5}}
	return a, nil
}

var _manifests01RoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\x70\xb7\x02\x56\xd1\xad\xd0\x05\xba\x77\xe8\xce\xc8\x74\x42\x44\x12\x05\x52\x36\xd0\x9e\xbe\x88\x63\x1b\x41\x3c\x74\x13\xc5\xf7\x9f\x3e\xf4\x02\x5f\x92\x08\x46\x51\x68\x17\x02\xa9\xa4\xd8\x44\x81\x9b\x51\x1a\xbd\xbb\x72\x19\xc2\xc2\x38\xac\xfc\x4d\x6a\x2c\x25\x80\x9e\x30\x7a\x9c\xda\x45\x94\x7f\xb1\xb1\x14\x7f\xfd\x30\xcf\xf2\x36\xbf\xbb\x4c\x0d\x07\x6c\x18\x1c\x40\xc1\x4c\x01\xb8\x9c\x95\xcc\xfa\x4d\xbf\x2e\xac\x62\xa4\x70\x7b\xb4\xd8\x85\xc7\xd6\x1f\x38\x9d\x12\x59\x70\x3d\x60\xe5\x4f\x95\xa9\xda\x4d\xda\xef\x3d\xfd\x9e\xf5\x2c\x0e\x40\xc9\x64\xd2\x48\x2b\xd6\xbd\x76\x0e\x60\x26\x3d\x3d\x5c\x1c\x6d\x5d\x77\x8c\x56\x19\x6c\x39\x18\xe9\xcc\x91\xee\x03\x95\xa1\x0a\x97\x76\x9f\xea\xed\x3b\xac\x51\x69\xb3\xa4\x29\x53\x4c\xc8\x79\x05\x67\xda\xa8\x28\x65\xe4\x73\xc6\xba\xf9\xa2\xd2\xb2\xfa\xb7\x17\xd6\x25\xf3\xd4\x6c\xa0\x9a\xe4\x27\xef\xfe\x87\x82\x4f\xc6\xbf\x00\x00\x00\xff\xff\x4f\x96\x11\xa4\xdd\x01\x00\x00")

func manifests01RoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleYaml,
		"manifests/01-role.yaml",
	)
}

func manifests01RoleYaml() (*asset, error) {
	bytes, err := manifests01RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role.yaml", size: 477, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4d, 0xf1, 0xe, 0xa2, 0x89, 0xa6, 0xa5, 0x86, 0x8d, 0x2d, 0x22, 0x6e, 0x62, 0x6c, 0x7c, 0x58, 0xca, 0x7b, 0x96, 0x5f, 0xa7, 0xbd, 0x5f, 0xcb, 0x2d, 0x53, 0xeb, 0x25, 0xd3, 0x62, 0x2c, 0xf8}}
	return a, nil
}

var _manifests01ServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x6e\x84\x30\x10\x44\x7b\x7f\xc5\x48\xd4\x20\xa5\x75\x97\x32\x75\xa4\xf4\x96\x3d\x84\xd5\x81\xed\xdb\x5d\xf8\xfe\x13\x88\xab\xae\x9e\xa7\x37\x6f\xc0\x77\xce\x6d\xaf\x8e\xb9\x29\x7c\x21\x5a\xa7\x26\x6f\x0a\x71\xe3\x3a\x4f\xf8\x71\xd8\xd2\xf6\xb5\x40\xf9\xdc\x45\x89\x9a\x36\x5a\x4f\x99\xb0\xdc\x3a\x4b\x18\xd0\xa9\x9b\x98\x49\xab\x36\x85\x87\xd4\x12\xf1\x4b\x3d\x24\xf3\xf6\x87\xd4\xe5\x8f\x7a\x12\x11\xc7\x57\xd8\xe8\xa9\x24\x4f\x31\xe0\xf2\x45\x48\xfd\x57\x9a\x8d\xef\x80\x7b\xb8\x8e\xe2\x99\x55\x6d\x91\xd9\xc7\x0f\xee\x15\x00\x00\xff\xff\xe5\x09\x18\x74\xc4\x00\x00\x00")

func manifests01ServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceAccountYaml,
		"manifests/01-service-account.yaml",
	)
}

func manifests01ServiceAccountYaml() (*asset, error) {
	bytes, err := manifests01ServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service-account.yaml", size: 196, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0xae, 0x8d, 0xe1, 0x55, 0xc4, 0xdf, 0x60, 0x69, 0xa, 0xef, 0xf1, 0x8c, 0x61, 0xea, 0x45, 0xf4, 0xa, 0xcb, 0x9d, 0xc7, 0xc3, 0xb4, 0x10, 0x8a, 0xb6, 0xf3, 0x21, 0xe6, 0x97, 0xc0, 0x28}}
	return a, nil
}

var _manifests01ServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x3d\x4e\x03\x41\x0c\x85\xfb\x39\x85\x2f\x30\x8b\x50\xaa\x4c\x4b\x45\x17\x09\x89\xde\x99\x3c\x96\x11\xb3\xf6\xc8\x36\x91\xb8\x3d\xca\xee\x02\x45\x0a\xca\xe7\xef\xfd\x98\x47\x7b\x85\x79\x53\x29\x74\x7d\x4c\x1f\x4d\x2e\x85\x5e\x60\xd7\x56\x91\x16\x04\x5f\x38\xb8\x24\x22\x16\xd1\xe0\x68\x2a\x7e\x93\x44\xbe\x99\xa6\x33\x82\x27\x1d\x10\x7f\x6f\x6f\x31\x35\x7d\x58\x89\xcc\xb9\xc2\x22\x3b\xaa\x21\xb2\xf0\x82\x42\x0b\xc2\x5a\xf5\x1c\xdd\x13\x51\xe7\x33\xfa\xde\xb6\xf1\x26\xb3\xc1\x3d\xeb\x80\x71\xa8\xa5\x1f\xb0\x07\x77\xed\x83\x2b\x0a\xfd\x8e\xe6\xbb\x9c\x0f\xd4\x5b\xf1\x50\x8b\x75\x21\xdf\x15\x6d\xb0\xd0\xf1\x70\x3c\xac\x32\xd8\x66\xc4\x69\x3d\xfe\xd9\x1c\x1d\x35\xd4\xfe\x79\x33\xbe\x06\x0a\x3d\xf5\x4f\x0f\xd8\xf3\x29\x7d\x07\x00\x00\xff\xff\x31\x2a\x66\x9a\x58\x01\x00\x00")

func manifests01ServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceYaml,
		"manifests/01-service.yaml",
	)
}

func manifests01ServiceYaml() (*asset, error) {
	bytes, err := manifests01ServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service.yaml", size: 344, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3f, 0x93, 0xf5, 0x35, 0x51, 0xf2, 0xbd, 0xe6, 0x30, 0xc3, 0xd3, 0x25, 0x22, 0x49, 0x95, 0x6a, 0x8f, 0xa2, 0x8a, 0x9c, 0x67, 0xa6, 0xe4, 0xd, 0xee, 0x77, 0x40, 0x1c, 0x28, 0xe7, 0x40, 0xa3}}
	return a, nil
}

var _manifests01TrustedCaConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xbf\x6e\xf3\x30\x0c\xc4\x77\x3d\xc5\x21\x99\x9d\x0f\xdf\xaa\xb5\x73\xb7\xa2\x3b\x23\xd3\x36\x1b\x99\x14\x44\xba\x45\xdf\xbe\x48\xed\xfe\x1b\x79\xe4\x1d\x7f\xb8\x33\x9e\x16\x86\x72\xbc\x59\xbf\xc1\x1a\x77\x0a\xeb\x10\x47\x67\x6f\xa6\x2e\xd7\xca\x98\xee\x92\xbe\x70\x09\xd1\x39\x9d\x11\x0b\x23\xfa\xe6\xc1\x23\x0a\xe1\xba\xe9\x58\x19\xa2\x61\x88\x45\x1c\xc5\x74\x92\x79\xa5\x76\x49\xd4\xe4\x99\xbb\x8b\x69\xc6\xeb\xff\x74\x13\x1d\x33\x1e\x3e\xf7\x8f\xd4\xd2\xca\x41\x23\x05\xe5\x04\x90\xaa\x05\x85\x98\xfa\x7d\x04\x3a\x57\x26\xe7\x8b\x35\x56\x5f\x64\x8a\x8b\xd8\xbf\xd2\x99\x82\x07\xd3\xfa\x9e\x71\x8a\xbe\xf1\x29\x01\x95\xae\x5c\x0f\xdb\xfe\xfd\xaf\x6b\xa7\x1f\x0e\xe8\xa1\xd0\xce\xfc\x2b\x41\x69\xe5\x8c\x9f\x83\x43\xf2\x46\x85\x33\xbe\xc3\x06\xd1\xb9\xb3\xfb\xf0\xd5\x55\xfa\x08\x00\x00\xff\xff\x4c\x3f\xbd\xa8\x43\x01\x00\x00")

func manifests01TrustedCaConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01TrustedCaConfigmapYaml,
		"manifests/01-trusted-ca-configmap.yaml",
	)
}

func manifests01TrustedCaConfigmapYaml() (*asset, error) {
	bytes, err := manifests01TrustedCaConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-trusted-ca-configmap.yaml", size: 323, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe, 0x99, 0xa0, 0xf5, 0x24, 0x3, 0x8, 0xa4, 0xc3, 0xec, 0x80, 0xc0, 0x88, 0xbd, 0x8, 0xb0, 0xfc, 0xf0, 0x3, 0x42, 0x53, 0x21, 0xf3, 0xbb, 0x4a, 0x33, 0xfd, 0x7, 0xa3, 0x23, 0x4, 0xfa}}
	return a, nil
}

var _manifests02DeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x51\x6f\xdb\x36\x10\x7e\xcf\xaf\x20\x8c\x3d\x6c\xc0\x68\x39\x69\xd7\xad\x04\xf2\xe0\xb9\x6a\x13\x20\x4e\x83\x38\x68\x1f\x0d\x9a\x3a\xdb\x9c\x29\x92\xbd\x3b\x19\xd1\xbf\x1f\x28\x3b\xb6\x2c\x3b\x6e\x1e\x36\x3d\x09\xe4\xf7\x7d\xfc\xee\x74\x77\xa2\x8e\xf6\x1b\x20\xd9\xe0\x95\xd0\x31\x52\xb6\xbe\xbc\x58\x59\x5f\x28\xf1\x09\xa2\x0b\x75\x09\x9e\x2f\x4a\x60\x5d\x68\xd6\xea\x42\x08\xaf\x4b\x50\xc2\xfa\x05\x02\x91\x0c\x11\x50\x73\xc0\xed\x06\x45\x6d\x40\x89\x10\xc1\xd3\xd2\xce\x59\x9e\xc0\x69\xef\x03\x6b\xb6\xc1\x53\xd2\x13\xc2\x04\x3f\xb7\x8b\xfe\x8e\xd4\xb7\x21\xb3\xfe\x1f\x30\x2c\x23\x86\xe7\xfa\xc4\x69\x14\xc1\x24\x32\x42\x74\xd6\x68\x52\xe2\xf2\x42\x08\x62\xd4\x0c\x8b\x7a\x23\xcb\x75\x04\x25\x1e\xc1\x20\x68\x86\xb4\x0d\x0e\x0c\x07\xdc\x6c\x97\x9a\xcd\xf2\x4e\xcf\xc0\x6d\x6d\x9c\x09\x8d\xa1\x8c\x4e\x33\x6c\x99\xad\x6c\xa4\xc7\x1d\x88\x9c\x91\x11\xe2\xc5\x77\x03\x0b\x05\x4c\x0e\x2c\xa5\x67\x55\xcd\x00\x3d\x30\x50\x4a\x43\x20\x25\x9c\xf5\xd5\xf3\x5e\x3c\x14\x20\x31\x38\xe8\x1f\x22\x4b\x4d\x0c\xa8\x44\xaf\xb7\x85\x72\x70\xe9\xe0\x7d\x9a\x85\x90\x62\x05\xb5\x12\xbd\xf3\x1a\xbd\xdd\x59\x2f\xd6\x95\xe8\xe5\xcf\x96\x98\xf6\x5b\x30\x9f\x83\x61\x25\x7a\xf7\x61\x62\x96\x50\x54\x0e\x7a\x27\x4e\xe9\x1c\x50\x79\x04\x6d\x96\x7a\xb6\x47\xbf\xf5\x94\xfc\x19\x4c\xc5\x2d\xda\x3e\xbe\x09\x98\xe0\x8b\x54\x03\x57\x83\x9f\x7b\xf0\x81\x25\x82\x2e\xea\xff\xd7\x01\x01\xae\xad\x81\xa1\x31\xa1\xf2\x7c\xff\x7a\x49\x08\x11\xd1\x06\xb4\x5c\x8f\x9c\x26\xda\x20\xa9\x26\x86\x52\x1a\x57\xa5\x2f\x22\x0d\x5a\xb6\x46\xbb\x2d\xc1\x04\xcf\xda\x7a\xc0\x56\xd1\xc9\x73\x65\xb7\xf5\x0b\x58\x5a\xdf\x18\x1e\x03\x91\x5e\xc0\x43\x70\xd6\xd4\x4a\x7c\xd6\xce\xcd\xb4\x59\x3d\x85\xbb\xb0\xa0\xaf\x3e\x47\x3c\x60\xda\x32\x81\x2b\xe7\x5e\x08\xb7\xf3\xfb\xc0\x0f\x08\x94\xa6\x43\x07\xd7\x6a\xff\x2c\xa0\x5d\x58\xbf\x8b\xa3\x6b\x4e\xa5\xa6\xa2\xb6\x82\x09\x65\xa9\x7d\xa1\x5a\x4b\xf2\x5c\x4c\x52\x10\x6b\xe4\x83\x15\x29\x77\xa3\xe8\x60\xbd\xf7\xcb\xaf\xdf\x87\x4f\xa3\x9b\xe9\xfd\x70\x9c\x4f\x1e\x86\xa3\xfc\xb7\x5e\x87\xd8\x04\xd0\x25\xdd\x8e\x87\x5f\x8e\xa1\x08\x0e\x34\x81\x5c\x6f\xa6\x67\x97\xf4\x98\xdf\xe5\xc3\x49\x3e\xfd\x96\x3f\x4e\x6e\xbf\xde\x1f\xd0\xc1\xaf\xdb\x01\xee\x3f\x5e\x87\x74\x80\x11\x62\xad\x5d\x05\x4a\xf4\x06\xfd\x41\xff\x52\x92\xd7\x91\x96\x81\x7b\x27\x95\x3a\x81\x9e\x52\xfa\x8c\xa1\x54\x9d\x0d\x21\xe6\x16\x5c\xf1\x08\xf3\xe3\x9d\xed\xde\x83\xe6\xa5\xda\xcd\xc0\xfe\xa9\x54\xef\x6d\x34\xa9\x3b\x1d\xc6\x51\x91\x2c\x75\x33\xed\x25\x86\x2a\x4d\xb2\xf5\xfb\xfe\xa0\xc5\x44\xa0\x50\xa1\x01\x3a\x34\x86\xf0\xa3\x02\x62\xea\xda\x35\xb1\x52\xe2\x72\x50\xb6\x96\xd7\xc1\x55\x25\x8c\x53\x3b\xd2\x61\x7d\x6d\xbc\x32\xa6\x22\x2d\xa4\xd1\x07\x5a\x65\x22\x6c\x82\xce\x80\x4d\x16\x57\x36\x33\x5a\x36\xe8\x0c\x9e\x19\xb5\x61\x28\xb2\x08\x65\xc7\x98\x2e\xbe\x7a\x57\x37\xba\x70\xd4\xa6\x69\x26\x49\x9c\x69\xb3\xf9\xc5\x1d\xf7\xd0\x8f\x4a\xd7\xcd\x1f\xa0\x9b\xa6\x0e\xf3\xb8\x85\x34\x2e\x3a\xf1\x49\xe9\xc2\x82\x03\x71\x01\x88\x9d\x1d\x02\x53\x21\x48\x67\x89\xc1\x4b\x5d\x14\xa9\xd3\xae\xd5\xc7\x77\x1f\xdf\x75\x90\xec\x48\x1a\x1b\x97\x80\x92\x2a\xcb\x40\xd7\x4f\x77\x93\x69\x3e\xfa\x74\x93\x4f\x1f\x27\xc3\xe9\xf7\xdb\xa7\x9b\xe9\x30\x9f\x4c\x2f\xaf\xfe\x9a\x7e\x19\x8d\xa7\x93\x9b\xe1\xd5\x1f\x1f\x7e\xdf\xa3\xf2\xd1\xa7\x9f\xe0\x8e\x74\x46\x7f\x8f\xde\xa4\x73\x12\x77\x46\xad\x13\x5b\x15\x89\x11\x74\x79\xbd\x64\x8e\x2a\xcb\x2e\xaf\xfe\xec\x37\x6d\xa6\x3e\x0c\x06\x83\x41\x76\x2a\x15\x80\x2c\xe7\xd6\xc1\x75\x53\x16\xec\x28\x8b\x68\xd7\x9a\x21\xbd\xf7\xcd\xd1\x50\x4a\xa4\x2d\x42\xae\xa0\x3e\xc3\x5d\x41\xbb\x20\x62\xc0\x6e\xc1\xee\x7e\x00\x0f\x01\x59\x89\xce\xc7\x7a\xb9\x81\x94\xc0\x68\x0d\xfd\xa7\x4d\x24\x9a\xfb\x4f\x19\xb0\x56\xe2\xfd\x60\x6c\xdf\xd4\x5f\xdd\x16\x6a\xc5\xfb\xba\xed\x94\xaf\x9f\x77\xd4\xe6\xd0\xd6\x0d\xe7\x75\x0d\x4a\x37\x41\x6e\x3b\xdb\xac\xdc\xbf\xc2\x38\x33\x17\x36\x37\xd6\xb1\x8e\x6d\xb5\x33\x53\xc4\x32\x94\xd4\x1d\xf9\xcd\x0d\xc5\x68\x39\xab\x7c\xe1\xa0\x53\x30\xe9\x89\x4d\xc6\x9a\x5a\xdb\xa1\xd2\x98\xf9\x37\x00\x00\xff\xff\x62\x28\x75\x1a\xb3\x0b\x00\x00")

func manifests02DeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests02DeploymentYaml,
		"manifests/02-deployment.yaml",
	)
}

func manifests02DeploymentYaml() (*asset, error) {
	bytes, err := manifests02DeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/02-deployment.yaml", size: 2995, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7f, 0xb3, 0xcc, 0x34, 0xd9, 0x3a, 0xec, 0x8d, 0xd5, 0x2d, 0x95, 0xf6, 0x2c, 0x82, 0x27, 0x83, 0x59, 0x81, 0x59, 0x76, 0xf7, 0xee, 0x34, 0x42, 0x3a, 0xc0, 0x78, 0xa8, 0xa2, 0x50, 0xf3, 0xb7}}
	return a, nil
}

var _manifests03ClusterOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x31\x6f\xc2\x40\x0c\x85\xf7\xfb\x15\x4f\xb0\x96\x14\xd6\xac\x4c\x9d\x58\x2a\x76\xf7\x62\x38\xab\x89\x1d\x9d\x7d\x20\xfe\x7d\x45\x00\xb5\xea\x4d\x4f\x67\xfb\x7d\xdf\x1a\x9f\x45\x1c\x95\xdd\x5a\xcd\x0c\x71\xa8\x05\x72\x65\x0a\x1e\xf0\x75\xc3\xfe\x78\x78\x83\xc4\x7d\x62\x3a\xde\xd0\x9c\x07\x90\x83\x90\x6d\x9a\x9a\x4a\xa6\x10\xd3\xb4\xc6\xc4\xb9\x90\x8a\x4f\x08\x43\xf0\x38\x22\x0a\xdf\xef\x71\x2d\x92\x0b\xf6\x63\xf3\xe0\x7a\x98\xb9\x52\x58\xfd\x85\x86\xe1\x4a\x12\x38\x59\xed\xd2\x1a\x1f\x7a\xae\xec\xbe\x37\x8d\x6a\xe3\xc8\xf5\xa9\xe3\x20\x1d\xd0\xe6\x61\xc9\xf1\xd7\xbb\x4b\x34\xcb\x91\xab\x8b\x69\x8f\x6c\x7a\x92\x73\x67\x33\xab\x17\x39\x45\x27\xf6\x7e\xd9\xa5\x6f\xd1\xa1\xff\x6f\x91\x26\x0e\x1a\x28\xa8\x4f\x80\xd2\xc4\x3d\xe4\xc1\x4f\x1e\x14\xcd\xef\xff\x97\x47\xf3\x92\x81\xcd\x73\xcf\x5e\x15\x58\xde\xe5\x85\x5f\x6d\xbb\x6d\xb7\xdb\xb8\xd2\xec\xc5\x62\x95\x7e\x02\x00\x00\xff\xff\xb3\xe2\x1b\x07\x65\x01\x00\x00")

func manifests03ClusterOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests03ClusterOperatorYaml,
		"manifests/03-cluster-operator.yaml",
	)
}

func manifests03ClusterOperatorYaml() (*asset, error) {
	bytes, err := manifests03ClusterOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/03-cluster-operator.yaml", size: 357, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9b, 0x55, 0x62, 0x66, 0x26, 0xb0, 0xbd, 0x39, 0xb8, 0x3f, 0x33, 0x66, 0x5d, 0x9f, 0x49, 0x8a, 0xa2, 0xac, 0x2a, 0x5c, 0x3e, 0x18, 0x29, 0x74, 0xbc, 0x0, 0x97, 0xc9, 0xe2, 0x1b, 0x83, 0x26}}
	return a, nil
}

var _manifestsImageReferences = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\xb1\x6e\xc3\x20\x10\x80\xe1\x9d\xa7\x38\x79\xc7\x69\xa5\x4e\xcc\x5d\x3a\x57\xea\x7e\x71\x2f\xce\xc9\x31\x47\xef\x8e\xa8\x79\xfb\xca\x4e\x54\x91\x56\x5e\x32\x81\x00\xfd\x1f\x30\x71\xfe\x4c\xf0\x36\xe3\x48\xef\xae\x84\x73\xc0\xc2\x1f\xa4\xc6\x92\x13\xf0\xb2\xde\x4b\xa1\x6c\x47\x3e\x78\xcf\xb2\x3b\x3f\x07\x2b\x34\xa4\x00\xe0\x38\xda\x32\x46\xc8\x38\x53\x82\xe1\x54\xcd\x49\x23\xe7\x51\xc9\x2c\x4a\x21\x45\x17\x0d\x00\x00\x07\x95\x39\xc1\x3a\x05\xb8\xaa\xdd\xab\x0c\x13\xe9\x8a\x77\xb7\x9d\x6b\xa9\xfb\x25\x77\xa2\x3c\x72\x8e\x5b\xed\x74\x42\x27\xf3\xae\xb9\xc6\x11\x8b\xca\xf7\x25\xaa\x54\xa7\x06\x7f\xd8\xbe\x0f\xa6\xf3\x4b\xff\xd4\x7a\x53\xdd\x53\xd4\x3d\x0e\x71\x3d\xb6\x01\x36\xde\x1d\xf7\x55\xf1\xb2\xfc\xeb\x3f\xf5\x4f\xf6\xf6\xd0\xf0\x13\x00\x00\xff\xff\xac\x8b\xd7\x12\xb1\x01\x00\x00")

func manifestsImageReferencesBytes() ([]byte, error) {
	return bindataRead(
		_manifestsImageReferences,
		"manifests/image-references",
	)
}

func manifestsImageReferences() (*asset, error) {
	bytes, err := manifestsImageReferencesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/image-references", size: 433, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe4, 0x14, 0x39, 0xff, 0xa2, 0xc1, 0xc5, 0xd4, 0x2e, 0xb7, 0xd, 0x93, 0xd5, 0x83, 0x85, 0x1f, 0x1d, 0xe7, 0x73, 0xd1, 0x42, 0x8, 0xfa, 0x7a, 0x25, 0x4a, 0xed, 0x37, 0x10, 0xb8, 0x13, 0xb9}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/router/cluster-role-binding.yaml": assetsRouterClusterRoleBindingYaml,

	"assets/router/cluster-role.yaml": assetsRouterClusterRoleYaml,

	"assets/router/deployment.yaml": assetsRouterDeploymentYaml,

	"assets/router/metrics/cluster-role-binding.yaml": assetsRouterMetricsClusterRoleBindingYaml,

	"assets/router/metrics/cluster-role.yaml": assetsRouterMetricsClusterRoleYaml,

	"assets/router/metrics/role-binding.yaml": assetsRouterMetricsRoleBindingYaml,

	"assets/router/metrics/role.yaml": assetsRouterMetricsRoleYaml,

	"assets/router/namespace.yaml": assetsRouterNamespaceYaml,

	"assets/router/service-account.yaml": assetsRouterServiceAccountYaml,

	"assets/router/service-cloud.yaml": assetsRouterServiceCloudYaml,

	"assets/router/service-internal.yaml": assetsRouterServiceInternalYaml,

	"manifests/00-cluster-role.yaml": manifests00ClusterRoleYaml,

	"manifests/00-custom-resource-definition-internal.yaml": manifests00CustomResourceDefinitionInternalYaml,

	"manifests/00-custom-resource-definition.yaml": manifests00CustomResourceDefinitionYaml,

	"manifests/00-ingress-credentials-request.yaml": manifests00IngressCredentialsRequestYaml,

	"manifests/00-namespace.yaml": manifests00NamespaceYaml,

	"manifests/0000_90_ingress-operator_00_prometheusrole.yaml": manifests0000_90_ingressOperator_00_prometheusroleYaml,

	"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml": manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,

	"manifests/0000_90_ingress-operator_02_servicemonitor.yaml": manifests0000_90_ingressOperator_02_servicemonitorYaml,

	"manifests/01-cluster-role-binding.yaml": manifests01ClusterRoleBindingYaml,

	"manifests/01-role-binding.yaml": manifests01RoleBindingYaml,

	"manifests/01-role.yaml": manifests01RoleYaml,

	"manifests/01-service-account.yaml": manifests01ServiceAccountYaml,

	"manifests/01-service.yaml": manifests01ServiceYaml,

	"manifests/01-trusted-ca-configmap.yaml": manifests01TrustedCaConfigmapYaml,

	"manifests/02-deployment.yaml": manifests02DeploymentYaml,

	"manifests/03-cluster-operator.yaml": manifests03ClusterOperatorYaml,

	"manifests/image-references": manifestsImageReferences,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": {nil, map[string]*bintree{
		"router": {nil, map[string]*bintree{
			"cluster-role-binding.yaml": {assetsRouterClusterRoleBindingYaml, map[string]*bintree{}},
			"cluster-role.yaml":         {assetsRouterClusterRoleYaml, map[string]*bintree{}},
			"deployment.yaml":           {assetsRouterDeploymentYaml, map[string]*bintree{}},
			"metrics": {nil, map[string]*bintree{
				"cluster-role-binding.yaml": {assetsRouterMetricsClusterRoleBindingYaml, map[string]*bintree{}},
				"cluster-role.yaml":         {assetsRouterMetricsClusterRoleYaml, map[string]*bintree{}},
				"role-binding.yaml":         {assetsRouterMetricsRoleBindingYaml, map[string]*bintree{}},
				"role.yaml":                 {assetsRouterMetricsRoleYaml, map[string]*bintree{}},
			}},
			"namespace.yaml":        {assetsRouterNamespaceYaml, map[string]*bintree{}},
			"service-account.yaml":  {assetsRouterServiceAccountYaml, map[string]*bintree{}},
			"service-cloud.yaml":    {assetsRouterServiceCloudYaml, map[string]*bintree{}},
			"service-internal.yaml": {assetsRouterServiceInternalYaml, map[string]*bintree{}},
		}},
	}},
	"manifests": {nil, map[string]*bintree{
		"00-cluster-role.yaml":                                   {manifests00ClusterRoleYaml, map[string]*bintree{}},
		"00-custom-resource-definition-internal.yaml":            {manifests00CustomResourceDefinitionInternalYaml, map[string]*bintree{}},
		"00-custom-resource-definition.yaml":                     {manifests00CustomResourceDefinitionYaml, map[string]*bintree{}},
		"00-ingress-credentials-request.yaml":                    {manifests00IngressCredentialsRequestYaml, map[string]*bintree{}},
		"00-namespace.yaml":                                      {manifests00NamespaceYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_00_prometheusrole.yaml":        {manifests0000_90_ingressOperator_00_prometheusroleYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_01_prometheusrolebinding.yaml": {manifests0000_90_ingressOperator_01_prometheusrolebindingYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_02_servicemonitor.yaml":        {manifests0000_90_ingressOperator_02_servicemonitorYaml, map[string]*bintree{}},
		"01-cluster-role-binding.yaml":                           {manifests01ClusterRoleBindingYaml, map[string]*bintree{}},
		"01-role-binding.yaml":                                   {manifests01RoleBindingYaml, map[string]*bintree{}},
		"01-role.yaml":                                           {manifests01RoleYaml, map[string]*bintree{}},
		"01-service-account.yaml":                                {manifests01ServiceAccountYaml, map[string]*bintree{}},
		"01-service.yaml":                                        {manifests01ServiceYaml, map[string]*bintree{}},
		"01-trusted-ca-configmap.yaml":                           {manifests01TrustedCaConfigmapYaml, map[string]*bintree{}},
		"02-deployment.yaml":                                     {manifests02DeploymentYaml, map[string]*bintree{}},
		"03-cluster-operator.yaml":                               {manifests03ClusterOperatorYaml, map[string]*bintree{}},
		"image-references":                                       {manifestsImageReferences, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
